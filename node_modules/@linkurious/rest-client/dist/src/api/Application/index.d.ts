/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-10-30.
 */
import { Request } from '../../http/request';
import { Application, ICreateApplicationParams, IUpdateApplicationParams } from './types';
export * from './types';
export declare class ApplicationAPI extends Request {
    /**
     * Get all the API applications.
     */
    getApplications(this: Request<Application[]>): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<Application[]>>;
    /**
     * Add a new API application.
     */
    createApplication(this: Request<Application>, params: ICreateApplicationParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").NotFoundError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<Application>>;
    /**
     * Update an API application.
     */
    updateApplication(this: Request<Application>, params: IUpdateApplicationParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").NotFoundError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<Application>>;
}
