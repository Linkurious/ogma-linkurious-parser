/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-08-19.
 */
import { Request } from '../../http/request';
import { User } from '../User';
import { ILoginOAuth2Params, ILoginParams, IUpdateCurrentUserParams } from './types';
export * from './types';
export declare class AuthAPI extends Request {
    /**
     * Log a user in by e-mail or username and password and return it.
     */
    login(this: Request<User>, params: ILoginParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<User>>;
    /**
     * Log a user in via OAuth2.
     */
    loginOAuth2(params: ILoginOAuth2Params): Promise<import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
    /**
     * Log the current user out.
     */
    logout(): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
    /**
     * Get the profile of the current user.
     */
    getCurrentUser(this: Request<User>): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").GuestDisabledError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<User>>;
    /**
     * Update the current user.
     */
    updateCurrentUser(this: Request<User>, params: IUpdateCurrentUserParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").AlreadyExistsError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<User>>;
}
