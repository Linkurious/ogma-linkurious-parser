/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-09-27.
 */
import { IDataSourceParams } from '../commonTypes';
/**
 * Available to custom groups.
 */
export declare enum Action {
    ADMIN_CONNECT = "admin.connect",
    ADMIN_INDEX = "admin.index",
    ADMIN_USERS = "admin.users",
    ADMIN_SCHEMA = "admin.schema",
    ADMIN_ALERTS = "admin.alerts",
    ADMIN_REPORT = "admin.report",
    ADMIN_STYLES = "admin.styles",
    RUN_QUERY = "runQuery",
    RAW_READ_QUERY = "rawReadQuery",
    RAW_WRITE_QUERY = "rawWriteQuery",
    RUN_CUSTOM_ACTION = "runCustomAction",
    WRITE_CUSTOM_ACTION = "writeCustomAction"
}
/**
 * Only for the built-in admin group.
 */
export declare enum AdminAction {
    ADMIN_APP = "admin.app",
    ADMIN_USERS_DELETE = "admin.users.delete",
    ADMIN_CONFIG = "admin.config"
}
export declare type AnyAction = AdminAction | Action;
export declare enum ItemTypeAccessRightType {
    READ = "read",
    EDIT = "edit",
    WRITE = "write",
    NONE = "none"
}
export declare enum PropertyAccessRightType {
    READ = "read",
    EDIT = "edit",
    NONE = "none"
}
export declare enum ActionAccessRightType {
    DO = "do",
    NONE = "none"
}
export declare enum AlertAccessRightType {
    READ = "read",
    NONE = "none"
}
export declare enum TargetType {
    NODE_CATEGORY = "nodeCategory",
    EDGE_TYPE = "edgeType",
    NODE_PROPERTY_KEY = "nodePropertyKey",
    EDGE_PROPERTY_KEY = "edgePropertyKey",
    ACTION = "action",
    ALERT = "alert"
}
export interface ISetAccessRightsParams extends IDataSourceParams {
    id: number;
    accessRights: Array<INodeCategoryAccessRight | IEdgeTypeAccessRight | INodePropertyAccessRight | IEdgePropertyAccessRight | IActionAccessRight | IAlertAccessRight>;
}
export interface IGenericAccessRight<TT extends TargetType> {
    targetType: TT;
    targetName: string;
}
export interface INodeCategoryAccessRight extends IGenericAccessRight<TargetType.NODE_CATEGORY> {
    type: ItemTypeAccessRightType;
}
export interface IEdgeTypeAccessRight extends IGenericAccessRight<TargetType.EDGE_TYPE> {
    type: ItemTypeAccessRightType;
}
export interface IActionAccessRight extends IGenericAccessRight<TargetType.ACTION> {
    type: ActionAccessRightType;
    targetName: Action;
}
export interface IAlertAccessRight extends IGenericAccessRight<TargetType.ALERT> {
    type: AlertAccessRightType;
}
export interface INodePropertyAccessRight extends IGenericAccessRight<TargetType.NODE_PROPERTY_KEY> {
    type: PropertyAccessRightType;
    targetItemType: string;
}
export interface IEdgePropertyAccessRight extends IGenericAccessRight<TargetType.EDGE_PROPERTY_KEY> {
    type: PropertyAccessRightType;
    targetItemType: string;
}
export interface IBuiltinOnlyActionAccessRight extends IGenericAccessRight<TargetType.ACTION> {
    type: ActionAccessRightType;
    targetName: AdminAction;
}
export declare type AccessRight = INodeCategoryAccessRight | IEdgeTypeAccessRight | IActionAccessRight | IBuiltinOnlyActionAccessRight | IAlertAccessRight | INodePropertyAccessRight | IEdgePropertyAccessRight;
export interface IUpdateAccessRightsSettingsParams extends IDataSourceParams {
    propertyKeyAccessRights: boolean;
}
