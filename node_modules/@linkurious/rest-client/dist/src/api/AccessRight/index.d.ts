/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-09-27.
 */
import { Request } from '../../http/request';
import { ISetAccessRightsParams, IUpdateAccessRightsSettingsParams } from './types';
export * from './types';
export declare class AccessRightAPI extends Request {
    /**
     * Set access rights on a group. The access rights will be checked to be of node categories or edge types in the schema.
     */
    setAccessRights(params: ISetAccessRightsParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").DataSourceUnavailableError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").NotFoundError> | import("../../http/response").Response<import("../../http/response").PropertyKeyAccessRightsRequiredError> | import("../../http/response").Response<import("../../http/response").InvalidPropertyKeyAccessLevelError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
    /**
     * Update the access rights settings of the data-source.
     */
    updateAccessRightsSettings(params: IUpdateAccessRightsSettingsParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").DataSourceUnavailableError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").StrictSchemaRequiredError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
}
