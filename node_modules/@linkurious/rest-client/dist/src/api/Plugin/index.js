"use strict";
/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-09-17.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var request_1 = require("../../http/request");
var response_1 = require("../../http/response");
__export(require("./types"));
var UNAUTHORIZED = response_1.LkErrorKey.UNAUTHORIZED, FORBIDDEN = response_1.LkErrorKey.FORBIDDEN;
var PluginAPI = /** @class */ (function (_super) {
    __extends(PluginAPI, _super);
    function PluginAPI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Get the list of installed plugins.
     */
    PluginAPI.prototype.getPlugins = function () {
        return this.request({ errors: [UNAUTHORIZED, FORBIDDEN], url: '/admin/plugins', method: 'GET' });
    };
    /**
     * Restart all plugins.
     */
    PluginAPI.prototype.restartAll = function () {
        return this.request({
            errors: [UNAUTHORIZED, FORBIDDEN],
            url: '/admin/plugins/restart-all',
            method: 'POST'
        });
    };
    return PluginAPI;
}(request_1.Request));
exports.PluginAPI = PluginAPI;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXBpL1BsdWdpbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsOENBQTJDO0FBQzNDLGdEQUErQztBQUkvQyw2QkFBd0I7QUFFakIsSUFBQSxpREFBWSxFQUFFLDJDQUFTLENBQWU7QUFFN0M7SUFBK0IsNkJBQU87SUFBdEM7O0lBa0JBLENBQUM7SUFqQkM7O09BRUc7SUFDSSw4QkFBVSxHQUFqQjtRQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxDQUFDLFlBQVksRUFBRSxTQUFTLENBQUMsRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDLENBQUM7SUFDakcsQ0FBQztJQUVEOztPQUVHO0lBQ0ksOEJBQVUsR0FBakI7UUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDbEIsTUFBTSxFQUFFLENBQUMsWUFBWSxFQUFFLFNBQVMsQ0FBQztZQUNqQyxHQUFHLEVBQUUsNEJBQTRCO1lBQ2pDLE1BQU0sRUFBRSxNQUFNO1NBQ2YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQWxCRCxDQUErQixpQkFBTyxHQWtCckM7QUFsQlksOEJBQVMifQ==