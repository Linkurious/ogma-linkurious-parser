"use strict";
/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-08-19.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var response_1 = require("../../http/response");
var request_1 = require("../../http/request");
__export(require("./types"));
var UNAUTHORIZED = response_1.LkErrorKey.UNAUTHORIZED, FORBIDDEN = response_1.LkErrorKey.FORBIDDEN;
var ConfigAPI = /** @class */ (function (_super) {
    __extends(ConfigAPI, _super);
    function ConfigAPI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Get the configuration of Linkurious.
     */
    ConfigAPI.prototype.getConfiguration = function (params) {
        return this.request({
            url: '/config',
            method: 'GET',
            params: params
        });
    };
    /**
     * Update Linkurious configuration.
     */
    ConfigAPI.prototype.updateConfiguration = function (params) {
        return this.request({
            errors: [UNAUTHORIZED, FORBIDDEN],
            url: '/config',
            method: 'POST',
            params: params
        });
    };
    return ConfigAPI;
}(request_1.Request));
exports.ConfigAPI = ConfigAPI;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXBpL0NvbmZpZy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsZ0RBQStDO0FBQy9DLDhDQUEyQztBQUkzQyw2QkFBd0I7QUFFakIsSUFBQSxpREFBWSxFQUFFLDJDQUFTLENBQWU7QUFFN0M7SUFBK0IsNkJBQU87SUFBdEM7O0lBdUJBLENBQUM7SUF0QkM7O09BRUc7SUFDSSxvQ0FBZ0IsR0FBdkIsVUFBc0QsTUFBeUI7UUFDN0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxTQUFTO1lBQ2QsTUFBTSxFQUFFLEtBQUs7WUFDYixNQUFNLEVBQUUsTUFBTTtTQUNmLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNJLHVDQUFtQixHQUExQixVQUEyQixNQUEyQjtRQUNwRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDbEIsTUFBTSxFQUFFLENBQUMsWUFBWSxFQUFFLFNBQVMsQ0FBQztZQUNqQyxHQUFHLEVBQUUsU0FBUztZQUNkLE1BQU0sRUFBRSxNQUFNO1lBQ2QsTUFBTSxFQUFFLE1BQU07U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0gsZ0JBQUM7QUFBRCxDQUFDLEFBdkJELENBQStCLGlCQUFPLEdBdUJyQztBQXZCWSw4QkFBUyJ9