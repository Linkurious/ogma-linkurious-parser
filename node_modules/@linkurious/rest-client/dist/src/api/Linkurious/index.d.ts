/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-08-19.
 */
import { Request } from '../../http/request';
import { IGetCustomFilesParams, IGetReportParams, RestartLinkuriousResponse, ISendAnalyticsParams, ServerStatus, ServerVersion, CustomFile } from './types';
export * from './types';
export declare class LinkuriousAPI extends Request {
    /**
     * Get the status of the Linkurious server.
     */
    getStatus(this: Request<ServerStatus>): Promise<import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<ServerStatus>>;
    /**
     * Get Linkurious current version information.
     */
    getVersion(this: Request<ServerVersion>): Promise<import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<ServerVersion>>;
    /**
     * Save an event to the analytics log file. All events follow the Segment Spec.
     */
    sendAnalytics(params: ISendAnalyticsParams): Promise<import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
    /**
     * Collect all the analytics and log files in a compressed tarball and return it.
     */
    getReport(params?: IGetReportParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<undefined>>;
    /**
     * Restart Linkurious. Return the URL of Linkurious after the restart.
     */
    restartLinkurious(this: Request<RestartLinkuriousResponse>): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ForbiddenError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<RestartLinkuriousResponse>>;
    /**
     * List all custom files in the specified root directory.
     */
    getCustomFiles(this: Request<CustomFile[]>, params?: IGetCustomFilesParams): Promise<import("../../http/response").Response<import("../../http/response").UnauthorizedError> | import("../../http/response").Response<import("../../http/response").ConnectionRefusedError> | import("../../http/response").Response<CustomFile[]>>;
}
