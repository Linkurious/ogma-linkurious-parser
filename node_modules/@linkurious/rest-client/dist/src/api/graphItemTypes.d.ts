/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-10-21.
 */
import { GenericObject } from './commonTypes';
import { PropertyTypeName, PropertyType } from './GraphSchema';
import { OgmaEdgeShape, OgmaNodeShape, StyleIcon, StyleImage } from './displayTypes';
export interface LkDate {
    type: 'date';
    value: string;
    timezone?: string;
}
export interface LkDateTime {
    type: 'datetime';
    value: string;
    timezone?: string;
}
export interface ConflictValue {
    type: PropertyTypeName;
    status: 'conflict';
    original: string;
}
export interface InvalidValue {
    type: PropertyType;
    status: 'invalid';
    original: string;
}
export interface MissingValue {
    type: PropertyTypeName;
    status: 'missing';
    mandatory: boolean;
}
export declare type LkProperty = string | number | boolean | LkDate | LkDateTime | MissingValue | InvalidValue | ConflictValue;
export declare type LkProperties = GenericObject<LkProperty>;
export interface LkItemData {
    properties: LkProperties;
    readAt: number;
}
export interface LkItem {
    id: string;
    data: LkItemData;
}
export interface GeoCoordinates {
    latitude: number;
    longitude: number;
}
export interface GeoData {
    original?: GeoCoordinates;
    current?: GeoCoordinates;
}
export interface LkDigestItem {
    nodeCategories: string[];
    edgeType: string;
    nodes: number;
    edges: number;
}
export interface LkEdgeDigestItem {
    edgeType: string;
    edges: number;
}
export interface LkNodeStatistics {
    degree?: number;
    supernode?: boolean;
    supernodeDigest?: LkEdgeDigestItem[];
    supernodeDegree?: number;
    digest?: LkDigestItem[];
}
export interface LkNodeData extends LkItemData {
    categories: string[];
    statistics?: LkNodeStatistics;
    geo: GeoData;
}
export interface LkNode extends LkItem {
    data: LkNodeData;
}
export interface LkEdgeData extends LkItemData {
    type: string;
}
export interface LkEdge extends LkItem {
    source: string;
    target: string;
    data: LkEdgeData;
}
export interface LkSubGraph {
    nodes: LkNode[];
    edges: LkEdge[];
}
export interface VizNodeInfo {
    id: string;
    attributes: {
        x: number;
        y: number;
        layoutable: boolean;
        selected?: boolean;
    };
    data: {
        geo: GeoData;
    };
}
export interface VizEdgeInfo {
    id: string;
    attributes: {
        selected?: boolean;
    };
}
export declare type VizNode = LkNode & VizNodeInfo;
export declare type VizEdge = LkEdge & VizEdgeInfo;
export interface WidgetNodeInfo {
    attributes: {
        x: number;
        y: number;
        color?: string[];
        radius?: number;
        shape?: OgmaNodeShape;
        icon?: StyleIcon;
        image?: StyleImage;
        text: {
            content: string;
        };
    };
}
export interface WidgetEdgeInfo {
    attributes: {
        color?: string;
        shape?: OgmaEdgeShape;
        width?: number;
        text: {
            content: string;
        };
    };
}
export declare type WidgetNode = LkNode & WidgetNodeInfo;
export declare type WidgetEdge = LkEdge & WidgetEdgeInfo;
