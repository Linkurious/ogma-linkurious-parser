/**
 * Copyright Linkurious SAS 2012 - 2019
 *
 * - Created on 2019-05-15.
 */
import { IDataSourceParams } from '../commonTypes';
import { ItemTypeAccessRightType, PropertyAccessRightType } from '../AccessRight';
export interface IStartSchemaSamplingParams extends IDataSourceParams {
    reset?: boolean;
}
export declare enum SamplingStatus {
    ONGOING = "ongoing",
    DONE = "done",
    ERROR = "error"
}
export interface GetSamplingStatusResponse {
    status: SamplingStatus;
    progress?: string;
    message?: string;
    lastSampled?: string;
}
export interface SimpleSchema {
    nodeCategories: string[];
    edgeTypes: string[];
    nodeProperties: string[];
    edgeProperties: string[];
}
export interface IUpdateSchemaSettingsParams extends IDataSourceParams {
    strictSchema: boolean;
}
export interface ISetNonIndexedPropertiesParams extends IDataSourceParams {
    properties: string[];
}
export declare enum EntityType {
    NODE = "node",
    EDGE = "edge"
}
export declare enum DataVisibility {
    NONE = "none",
    AVAILABLE = "available",
    SEARCHABLE = "searchable"
}
export interface ICreateTypeParams extends IDataSourceParams {
    entityType: EntityType;
    itemType: string;
    visibility?: DataVisibility;
}
export interface IUpdateTypeParams extends ICreateTypeParams {
}
export declare enum PropertyTypeName {
    AUTO = "auto",
    BOOLEAN = "boolean",
    DATE = "date",
    DATETIME = "datetime",
    NUMBER = "number",
    STRING = "string"
}
export interface ISimpleType {
    name: PropertyTypeName.AUTO | PropertyTypeName.NUMBER | PropertyTypeName.BOOLEAN;
}
export interface IEnumOptions {
    values: string[];
}
export interface IStringType {
    name: PropertyTypeName.STRING;
    options?: IEnumOptions;
}
export declare enum DateFormat {
    NATIVE = "native",
    ISO = "iso",
    DD_MM_YYYY = "dd/mm/yyyy",
    MM_DD_YYYY = "mm/dd/yyyy",
    TIMESTAMP = "timestamp",
    TIMESTAMP_MS = "timestamp-ms"
}
export interface IDateOptions {
    format: DateFormat;
}
export interface IDateType {
    name: PropertyTypeName.DATE;
    options: IDateOptions;
}
export declare enum DateTimeFormat {
    NATIVE = "native",
    ISO = "iso",
    TIMESTAMP = "timestamp",
    TIMESTAMP_MS = "timestamp-ms"
}
export interface IDatetimeOptions {
    format: DateTimeFormat;
    timezone?: boolean;
}
export interface IDateTimeType {
    name: PropertyTypeName.DATETIME;
    options: IDatetimeOptions;
}
export declare type PropertyType = ISimpleType | IStringType | IDateType | IDateTimeType;
export interface ICreatePropertyParams extends IDataSourceParams {
    entityType: EntityType;
    itemType: string;
    propertyKey: string;
    propertyType: PropertyType;
    required?: boolean;
    visibility?: DataVisibility;
}
export interface IUpdatePropertyParams extends IDataSourceParams {
    entityType: EntityType;
    itemType: string;
    propertyKey: string;
    propertyType?: PropertyType;
    required?: boolean;
    visibility?: DataVisibility;
}
export interface GraphSchemaProperty {
    propertyKey: string;
    required: boolean;
    visibility: DataVisibility;
    propertyType: PropertyType;
}
export interface GraphSchemaPropertyWithAccess extends GraphSchemaProperty {
    access: PropertyAccessRightType;
}
export interface GraphSchemaType {
    itemType: string;
    properties: GraphSchemaProperty[];
    visibility: DataVisibility;
}
export interface IGetTypesParams extends IDataSourceParams {
    entityType: EntityType;
}
export interface GraphSchema {
    results: GraphSchemaType[];
}
export interface GraphSchemaTypeWithAccess extends GraphSchemaType {
    access: ItemTypeAccessRightType;
    properties: GraphSchemaProperty[] | GraphSchemaPropertyWithAccess[];
}
export interface GraphSchemaWithAccess extends GraphSchema {
    any: {
        access: ItemTypeAccessRightType;
    };
    results: GraphSchemaTypeWithAccess[];
}
