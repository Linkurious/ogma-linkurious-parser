{"version":3,"file":"reactive.js","sourceRoot":"","sources":["../../../src/ogma/features/reactive.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport * as o from 'ogma';\nimport Ogma from 'ogma';\nimport {LkEdgeData, LkNodeData} from '@linkurious/rest-client';\n\nimport {ANIMATION_DURATION, LKOgma} from '../index';\nimport {EdgeList, NodeList} from '../models';\n\nimport {OgmaStore} from './OgmaStore';\n\nexport interface OgmaState {\n  selection: NodeList<LkNodeData, LkEdgeData> | EdgeList<LkEdgeData, LkNodeData>;\n  items: {node: Array<string | number>; edge: Array<string | number>};\n  changes: {entityType: 'node' | 'edge'; input: o.PropertyPath; value: any} | undefined;\n  animation: boolean;\n}\n\nexport class RxViz {\n  private _ogma: Ogma;\n  private _store: OgmaStore = new OgmaStore({\n    selection: new DummyNodeList() as any,\n    items: {node: [], edge: []},\n    changes: undefined,\n    animation: false\n  });\n  private _animationThrottle: any;\n\n  constructor(ogma: LKOgma) {\n    this._ogma = ogma;\n    this.listenToSelectionEvents();\n  }\n\n  public get store(): OgmaStore {\n    return this._store;\n  }\n\n  /**\n   * Store new items in state\n   */\n  private storeItems(state: OgmaState): OgmaState {\n    return {\n      ...state,\n      items: {\n        node: this._ogma.getNodes().getId(),\n        edge: this._ogma.getEdges().getId()\n      }\n    };\n  }\n\n  /**\n   * Store new node selection in state\n   */\n  private storeNodeSelection(state: OgmaState): OgmaState {\n    return {\n      ...state,\n      selection: this._ogma.getSelectedNodes() as NodeList<LkNodeData, LkEdgeData>\n    };\n  }\n\n  /**\n   * store new edge selection in state\n   */\n  private storeEdgeSelection(state: OgmaState): OgmaState {\n    return {\n      ...state,\n      selection: this._ogma.getSelectedEdges() as EdgeList<LkEdgeData, LkNodeData>\n    };\n  }\n\n  /**\n   * Listen to ogma events and update the state\n   */\n  private listenToSelectionEvents(): void {\n    let count = 0;\n    (this._ogma as any).modules.events.on('animate', (e: {duration: number}) => {\n      const animationEnd = ++count;\n      this._store.dispatch((state) => ({...state, animation: true}));\n      clearTimeout(this._animationThrottle);\n      this._animationThrottle = setTimeout(() => {\n        if (count === animationEnd) {\n          this._store.dispatch((state) => ({...state, animation: false}));\n        }\n      }, e.duration + ANIMATION_DURATION + 100);\n    });\n\n    this._ogma.events.onDragStart(() => {\n      this._store.dispatch((state) => ({...state, animation: true}));\n    });\n\n    this._ogma.events.onDragEnd(() => {\n      this._store.dispatch((state) => ({...state, animation: false}));\n    });\n\n    this._ogma.events.onNodesAdded(() => {\n      this._store.dispatch(this.storeItems.bind(this));\n    });\n    this._ogma.events.onNodesRemoved(() => {\n      this._store.dispatch(this.storeItems.bind(this));\n    });\n    this._ogma.events.onEdgesAdded(() => {\n      this._store.dispatch(this.storeItems.bind(this));\n    });\n    this._ogma.events.onEdgesRemoved(() => {\n      this._store.dispatch(this.storeItems.bind(this));\n    });\n\n    this._ogma.events.onNodesSelected(() => {\n      this._store.dispatch(this.storeNodeSelection.bind(this));\n    });\n\n    this._ogma.events.onEdgesSelected(() => {\n      this._store.dispatch(this.storeEdgeSelection.bind(this));\n    });\n\n    this._ogma.events.onNodesUnselected(() => {\n      this._store.dispatch(this.storeNodeSelection.bind(this));\n    });\n\n    this._ogma.events.onEdgesUnselected(() => {\n      this._store.dispatch(this.storeEdgeSelection.bind(this));\n    });\n\n    this._ogma.events.onNodeDataChange((evt) => {\n      evt.changes.forEach((change) => {\n        this._store.dispatch((state) => ({\n          ...state,\n          changes: {\n            entityType: 'node',\n            input: change.property,\n            value: change.newValues[0]\n          }\n        }));\n      });\n    });\n\n    this._ogma.events.onEdgeDataChange((evt) => {\n      evt.changes.forEach((change) => {\n        this._store.dispatch((state) => ({\n          ...state,\n          changes: {\n            entityType: 'edge',\n            input: change.property,\n            value: change.newValues[0]\n          }\n        }));\n      });\n    });\n  }\n}\n\nexport class DummyNodeList {\n  public size = 0;\n  public isNode = true;\n}\n"]}