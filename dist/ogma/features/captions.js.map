{"version":3,"file":"captions.js","sourceRoot":"","sources":["../../../src/ogma/features/captions.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport * as o from 'ogma';\nimport * as Ogma from 'ogma';\nimport {ItemFieldsCaptions} from '@linkurious/rest-client';\n\nimport {Captions, LKOgma, Tools} from '../..';\n\nexport interface CaptionState {\n  node: ItemFieldsCaptions;\n  edge: ItemFieldsCaptions;\n}\n\nexport class CaptionsViz {\n  public nodesCaptionsRule!: o.StyleRule;\n  public edgesCaptionsRule!: o.StyleRule;\n  private _ogma: LKOgma;\n  private _schema: CaptionState = {node: {}, edge: {}};\n  private _exportCaptionClass!: Ogma.StyleClass;\n\n  constructor(\n    ogma: LKOgma,\n    private _nodeMaxTextLength: number | undefined,\n    private _edgeMaxTextLength: number | undefined\n  ) {\n    this._ogma = ogma;\n  }\n\n  /**\n   * Refresh the schema\n   */\n  public refreshSchema(schema: CaptionState): void {\n    this._schema = schema;\n  }\n\n  /**\n   * Create or update nodeCaptionRule\n   */\n  public updateNodeCaptions(schema?: ItemFieldsCaptions): Promise<void> {\n    if (schema) {\n      this._schema.node = schema;\n    }\n    if (!Tools.isDefined(this.nodesCaptionsRule)) {\n      return new Promise((resolve) => {\n        this.nodesCaptionsRule = this._ogma.styles.addRule({\n          nodeAttributes: {\n            text: {\n              content: (node: o.Node | undefined) => {\n                if (node === undefined) {\n                  return ``;\n                }\n                const value = Captions.getText(node.getData(), this._schema.node);\n                return Tools.isDefined(this._nodeMaxTextLength)\n                  ? Tools.truncate(value, 'middle', this._nodeMaxTextLength)\n                  : value;\n              }\n            }\n          },\n          nodeDependencies: {self: {data: true}}\n        });\n        return resolve();\n      });\n    } else {\n      return this.nodesCaptionsRule.refresh();\n    }\n  }\n\n  /**\n   * Create or update edgeCaptionRule\n   */\n  public updateEdgeCaptions(schema?: ItemFieldsCaptions): Promise<void> {\n    if (schema) {\n      this._schema.edge = schema;\n    }\n    if (!Tools.isDefined(this.edgesCaptionsRule)) {\n      return new Promise((resolve) => {\n        this.edgesCaptionsRule = this._ogma.styles.addRule({\n          edgeAttributes: {\n            text: {\n              content: (edge: o.Edge | undefined) => {\n                if (edge === undefined) {\n                  return ``;\n                }\n                const value = Captions.getText(edge.getData(), this._schema.edge);\n                return Tools.isDefined(this._edgeMaxTextLength)\n                  ? Tools.truncate(value, 'middle', this._edgeMaxTextLength)\n                  : value;\n              }\n            }\n          },\n          edgeDependencies: {self: {data: true}}\n        });\n        return resolve();\n      });\n    } else {\n      return this.edgesCaptionsRule.refresh();\n    }\n  }\n\n  /**\n   * Set the class for exported nodes and edges\n   */\n  public setExportCaptionClass(textWrappingLength?: boolean): void {\n    if (!this._exportCaptionClass) {\n      this._exportCaptionClass = this._ogma.styles.createClass({\n        name: 'exportedCaption',\n        nodeAttributes: {\n          text: {\n            content: (node: o.Node | undefined) => {\n              if (node === undefined) {\n                return ``;\n              }\n              return Captions.getText(node.getData(), this._schema.node);\n            }\n          }\n        },\n        nodeDependencies: {self: {data: true}},\n        edgeAttributes: {\n          text: {\n            content: (edge: o.Edge | undefined) => {\n              if (edge === undefined) {\n                return ``;\n              }\n              return Captions.getText(edge.getData(), this._schema.edge);\n            }\n          }\n        },\n        edgeDependencies: {self: {data: true}}\n      });\n    }\n  }\n}\n"]}