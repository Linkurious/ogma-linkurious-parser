{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/ogma/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ogma from 'ogma';\nimport {\n  EntityType,\n  IOgmaConfig,\n  LkEdgeData,\n  LkNodeData,\n  VizEdge,\n  VizNode\n} from '@linkurious/rest-client';\n\nimport {Tools} from '..';\n\nimport {StylesViz} from './features/styles';\nimport {OgmaStore} from './features/OgmaStore';\nimport {CaptionsViz} from './features/captions';\nimport {RxViz} from './features/reactive';\nimport {EdgeList, NodeList} from './models';\nimport {Ogma} from './ogma';\n\nexport const ANIMATION_DURATION = 750;\n\nexport class LKOgma extends Ogma<LkNodeData, LkEdgeData> {\n  public LKStyles: StylesViz;\n  public LKCaptions: CaptionsViz;\n  public store: OgmaStore;\n  public nodeCategoriesWatcher: ogma.NonObjectPropertyWatcher = this.schema.watchNodeNonObjectProperty(\n    {\n      path: 'categories',\n      unwindArrays: true,\n      filter: 'all'\n    }\n  );\n  public edgeTypeWatcher: ogma.NonObjectPropertyWatcher = this.schema.watchEdgeNonObjectProperty({\n    path: 'type',\n    filter: 'all'\n  });\n\n  private readonly _multiSelectionKey: string;\n  private _reactive: RxViz;\n\n  constructor(_configuration: IOgmaConfig) {\n    // set Ogma global configuration\n    super(_configuration);\n    Object.setPrototypeOf(this, new.target.prototype);\n    // set ogma max zoom value  and selection with mouse option (false?)\n    this.setOptions({\n      interactions: {\n        zoom: {\n          maxValue: (params: any) => {\n            return 128 / params.smallestNodeSize;\n          }\n        },\n        selection: {\n          enabled: false\n        }\n      }\n    });\n    // TODO: need to override  in LKE\n    this.initSelection();\n    // init ogma styles object\n    this.initStyles();\n    // init visualization captions\n    this.initCaptions(_configuration)\n\n    this._reactive = new RxViz(this);\n    this.store = this._reactive.store;\n    this.LKStyles.setNodesDefaultStyles(\n      _configuration.options !== undefined && _configuration.options.styles !== undefined\n        ? _configuration.options.styles.node\n        : undefined\n    );\n    this.LKStyles.setEdgesDefaultStyles(\n      _configuration.options !== undefined && _configuration.options.styles !== undefined\n        ? _configuration.options.styles.edge\n        : undefined\n    );\n    this._multiSelectionKey = navigator.platform === 'MacIntel' ? 'cmd' : 'ctrl';\n  }\n\n  /**\n   * Initialize selection behavior\n   */\n  public initSelection(): void {\n    this.events.onClick((e) => {\n      if (e.button === 'left') {\n        if (e.target !== null) {\n          if (this.keyboard.isKeyPressed(this._multiSelectionKey)) {\n            this.getSelectedNodes().setSelected(false);\n            this.getSelectedEdges().setSelected(false);\n            e.target.setSelected(true);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Initialize graph\n   */\n  public async init(visualization: { nodes: Array<VizNode>; edges: Array<VizEdge> }): Promise<void> {\n    this.clearGraph();\n    let selectedEntityType: EntityType | undefined = undefined;\n    const selectedElements: Array<string> = [];\n    // need to remove selected in every items before adding them to Ogma\n    const fixedNodes = visualization.nodes.map((node) => {\n      if (node.attributes.selected) {\n        selectedEntityType = EntityType.NODE;\n        selectedElements.push(node.id);\n      }\n      delete node.attributes.selected;\n      return node;\n    });\n    const fixedEdges = visualization.edges.map((edge) => {\n      if (edge.attributes !== undefined) {\n        if (edge.attributes.selected) {\n          selectedEntityType = EntityType.EDGE;\n          selectedElements.push(edge.id);\n        }\n        delete edge.attributes.selected;\n      }\n      return edge;\n    });\n    await this.setGraph({\n      nodes: fixedNodes,\n      edges: fixedEdges\n    });\n    if (selectedEntityType === EntityType.NODE) {\n      this.getNodes(selectedElements).setSelected(true);\n    } else if (selectedEntityType === EntityType.EDGE) {\n      this.getEdges(selectedElements).setSelected(true);\n    }\n  }\n\n  /**\n   * Return the list of non filtered nodes\n   */\n  public getNonFilteredNodes(items?: Array<any>): NodeList<LkNodeData, LkEdgeData> {\n    return Tools.isDefined(items)\n      ? this.getNodes(items).filter((i) => !i.hasClass('filtered'))\n      : this.getNodes().filter((i) => !i.hasClass('filtered'));\n  }\n\n  /**\n   * Return the list of filtered nodes\n   */\n  public getFilteredNodes(items?: Array<any>): NodeList<LkNodeData, LkEdgeData> {\n    return Tools.isDefined(items)\n      ? this.getNodes(items).filter((i) => i.hasClass('filtered'))\n      : this.getNodes().filter((i) => i.hasClass('filtered'));\n  }\n\n  /**\n   * Return the list of non filtered edges\n   */\n  public getNonFilteredEdges(items?: Array<any>): EdgeList<LkEdgeData, LkNodeData> {\n    return Tools.isDefined(items)\n      ? this.getEdges(items).filter((i) => !i.hasClass('filtered'))\n      : this.getEdges().filter((i) => !i.hasClass('filtered'));\n  }\n\n  /**\n   * Return the list of filtered edges\n   */\n  public getFilteredEdges(items?: Array<any>): EdgeList<LkEdgeData, LkNodeData> {\n    return Tools.isDefined(items)\n      ? this.getEdges(items).filter((i) => i.hasClass('filtered'))\n      : this.getEdges().filter((i) => i.hasClass('filtered'));\n  }\n\n  /**\n   * Do a full reset on ogma and streams of ogma\n   */\n  public shutDown() {\n    this.destroy();\n    if (this.store) {\n      this.store.clear();\n    }\n  }\n\n  private initStyles() {\n    this.LKStyles = new StylesViz(this);\n  }\n\n  private initCaptions(_configuration: IOgmaConfig) {\n    const nodeMaxTextLength = _configuration?.options?.styles?.node?.text?.maxTextLength;\n    this.LKCaptions = new CaptionsViz(\n      this,\n      nodeMaxTextLength,\n      _configuration.options !== undefined &&\n      _configuration.options.styles !== undefined &&\n      _configuration.options.styles.edge !== undefined &&\n      _configuration.options.styles.edge.text !== undefined\n        ? _configuration.options.styles.edge.text.maxTextLength\n        : undefined\n    );\n  }\n}\n"]}