{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../src/tools/tools.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAEb,uDAAiC;AAuB/B,gBAvBK,eAAK,CAuBL;AAtBP,yDAAmC;AAuBjC,iBAvBK,gBAAM,CAuBL;AAtBR,2DAAqC;AAuBnC,kBAvBK,iBAAO,CAuBL;AAtBT,6DAAuC;AAuBrC,mBAvBK,kBAAQ,CAuBL;AAtBV,6DAAuC;AAuBrC,mBAvBK,kBAAQ,CAuBL;AAtBV,mDAA6B;AAuB3B,cAvBK,aAAG,CAuBL;AAtBL,qDAA+B;AAuB7B,eAvBK,cAAI,CAuBL;AAtBN,6DAAuC;AAuBrC,mBAvBK,kBAAQ,CAuBL;AAtBV,yDAAmC;AAuBjC,iBAvBK,gBAAM,CAuBL;AAtBR,+DAAyC;AAuBvC,oBAvBK,mBAAS,CAuBL;AAtBX,yDAAmC;AAuBjC,iBAvBK,gBAAM,CAuBL;AAtBR,mDAA6B;AAuB3B,cAvBK,aAAG,CAuBL;AAtBL,qDAA+B;AAuB7B,eAvBK,cAAI,CAuBL;AAtBN,6DAAuC;AAuBrC,mBAvBK,kBAAQ,CAuBL;AAtBV,+DAAyC;AAuBvC,oBAvBK,mBAAS,CAuBL;AAtBX,uDAAiC;AAuB/B,gBAvBK,eAAK,CAuBL;AAtBP,qEAA+C;AAuB7C,uBAvBK,sBAAY,CAuBL;AAGD,QAAA,qBAAqB,GAAG,GAAG,CAAC;AAC5B,QAAA,aAAa,GAAG,eAAe,CAAC;AAChC,QAAA,iBAAiB,GAAa;IACzC,OAAO;IACP,OAAO;IACP,MAAM;IACN,MAAM;IACN,OAAO;IACP,OAAO;IACP,YAAY;CACb,CAAC;AACW,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,iBAAiB,GAAG,UAAU,CAAC;AAC/B,QAAA,gBAAgB,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AAC/D,QAAA,eAAe,GAAa;IACvC,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;CACd,CAAC;AACW,QAAA,uBAAuB,GAAG;IACrC,KAAK,EAAE,CAAC;IACR,gBAAgB,EAAE,CAAC;IACnB,uBAAuB,EAAE,CAAC;IAC1B,eAAe,EAAE,CAAC;IAClB,IAAI,EAAE,CAAC;CACR,CAAC;AAEF,IAAM,WAAW,GAA8C;IAC7D,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACtD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACjD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAClD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAChD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAClD,GAAG,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC1C,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC9C,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IAC/C,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC/C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,eAAe,EAAC;IACjD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC7C,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC/C,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACnD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACtD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACvD,oBAAoB,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC/D,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACxD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC/C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAClD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACnD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAClD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC3C,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACpD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC5C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAChD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACrD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACrD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACpD,iBAAiB,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC1D,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACvD,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACxD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACjD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC9C,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACvD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC7C,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC7C,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,gBAAgB,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC3D,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACxD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,eAAe,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACzD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACtD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACvD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACjD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC7C,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACvD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAClD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACpD,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACzD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACpD,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACzD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC3C,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IACjD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC/C,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;IAC3C,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACrD,eAAe,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC1D,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACtD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAClD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC/C,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACjD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACjD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAChD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAChD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACtD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACvD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACpD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACnD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACpD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACpD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC/C,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,eAAe,EAAC;IAC9C,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC/C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAClD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IAClD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACxD,eAAe,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACzD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC/C,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACrD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAClD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACtD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,YAAY,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACvD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACxD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACjD,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC/C,OAAO,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAClD,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACzD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,aAAa,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,eAAe,EAAC;IACrD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,YAAY,EAAC;IAC1C,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACnD,cAAc,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACzD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACjD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACtD,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAChD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,GAAG,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IAC9C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAC;IACpD,UAAU,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACpD,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,IAAI,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IAC9C,SAAS,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,iBAAiB,EAAC;IACnD,WAAW,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IACpD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC/C,KAAK,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAC;IAC9C,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,cAAc,EAAC;CAC9C,CAAC;AAEF,IAAM,WAAW,GAAG,0CAA0C,CAAC;AAC/D,IAAM,aAAa,GAAG,qCAAqC,CAAC;AAC5D,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB;IAAA;IA8uCA,CAAC;IA7uCC;;;;;OAKG;IACW,aAAO,GAArB,UAAsB,KAAa;QACjC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO,UAAU,CAAC;SACnB;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,OAAO,CAAC;SAChB;QAED,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACW,kBAAY,GAA1B,UAA8B,QAAgB,EAAE,WAAe;QAC7D,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,UAAU,CAAC;gBACT,OAAO,CAAC,WAAW,CAAC,CAAC;YACvB,CAAC,EAAE,QAAQ,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACW,uBAAiB,GAA/B,UAAgC,cAAsB;QACpD,IAAM,aAAa,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACtD,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;;YAC9C,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBACZ,6BACK,GAAG,gBACL,KAAK,CAAC,CAAC,CAAC,IAAG,KAAK,CAAC,CAAC,CAAC,OACpB;aACH;YACD,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED;;;;;OAKG;IACY,WAAK,GAApB,UAAqB,KAAa;QAChC,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED;;;;;OAKG;IACY,aAAO,GAAtB,UAAuB,KAAa;QAClC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACW,iBAAW,GAAzB,UAA0B,CAAU;QAClC,kEAAkE;QAClE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,6CAA6C;YAC7C,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACnB,OAAO,MAAM,CAAC,GAAG,CAAC;aACnB;YAED,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC1B;QAED,yEAAyE;QACzE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QAED,sCAAsC;QACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAChB,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QAED,OAAO,CAAC,CAAC;IACX,CAAC;IAED;;;;;;;OAOG;IACW,WAAK,GAAnB,UAAoB,CAAM;QACxB,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEzB,2BAA2B;QAC3B,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACW,aAAO,GAArB,UAAsB,CAAM;QAC1B,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEzB,6CAA6C;QAC7C,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACW,cAAQ,GAAtB,UAAuB,CAAM;QAC3B,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED;;;;;OAKG;IACW,YAAM,GAApB,UAAqB,CAAM;QACzB,IAAM,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACW,gBAAU,GAAxB,UAAyB,CAAU;QACjC,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACW,mBAAa,GAA3B,UAA4B,MAAc;QACxC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1B,IAAI,MAAM,IAAI,OAAO,EAAE;YACrB,GAAG,GAAG,OAAO,CAAC;YACd,MAAM,GAAG,GAAG,CAAC;SACd;aAAM,IAAI,MAAM,IAAI,IAAI,EAAE;YACzB,GAAG,GAAG,IAAI,CAAC;YACX,MAAM,GAAG,GAAG,CAAC;SACd;QACD,IAAM,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC;QACxB,0CAA0C;QAC1C,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;SACtC;aAAM;YACL,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;SACvC;IACH,CAAC;IAED;;;;;;;;OAQG;IACW,kBAAY,GAA1B,UACE,KAAuB,EACvB,GAAW,EACX,GAAW,EACX,KAAa;QAEb,IAAM,UAAU,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjD,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAM,IAAI,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC/C,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACxD;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;QACxD,IAAI,MAAM,IAAI,UAAU,EAAE;YACxB,OAAO,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACrC;aAAM;YACL,OAAO,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC;SACvD;IACH,CAAC;IAED;;;;;;;OAOG;IACW,kBAAY,GAA1B,UAA2B,CAAS;QAClC,OAAO,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,EAAC,qBAAqB,EAAE,CAAC,EAAC,CAAC,CAAC;IAC5D,CAAC;IAED;;;OAGG;IACW,4BAAsB,GAApC,UAAqC,QAA4B;QAC/D,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,OAAO,CAAC,CAAC;SACV;QACD,IAAI,QAAQ,KAAK,GAAG,EAAE;YACpB,OAAO,CAAC,CAAC;SACV;QACD,IAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnB,IAAA,iCAA+C,EAA9C,aAAK,EAAE,eAAuC,CAAC;QACtD,OAAO,IAAI,KAAK,GAAG;YACjB,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,GAAG,KAAK;YAC7F,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK;gBAC1C,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBAC9C,CAAC,CAAC,CAAC;IACX,CAAC;IAEa,6BAAuB,GAArC,UAAsC,GAAW;QAC/C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC3C,OAAO,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,OAAO,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACW,gBAAU,GAAxB,UACE,SAAiB,EACjB,UAAoB,EACpB,QAAiB;QAEjB,8DAA8D;QAC9D,IAAI,UAAU,GAAoB,SAAS,CAAC;QAC5C,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC;SAC9D;QACD,IAAM,UAAU,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAExC,IAAI,KAAK,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,aAAa,GACf,UAAU,CAAC,WAAW,EAAE;YACxB,GAAG;YACH,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;gBACrD,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;gBACtC,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;YACjC,GAAG;YACH,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;gBAC9C,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,UAAU,EAAE;gBAC/B,CAAC,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC;QAE/B,IAAI,UAAU,EAAE;YACd,aAAa;gBACX,GAAG;oBACH,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;wBAC/C,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE;wBAChC,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;oBAC7B,GAAG;oBACH,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;wBACjD,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,aAAa,EAAE;wBAClC,CAAC,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;oBAC/B,GAAG;oBACH,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;wBACjD,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,aAAa,EAAE;wBAClC,CAAC,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC;SACnC;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACW,WAAK,GAAnB,UAAoB,CAAM;QACxB,OAAO,OAAO,CAAC,KAAK,QAAQ;YAC1B,CAAC,CAAC,IAAI,CAAC,KAAK,CACR,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC;gBACrB,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CACH;YACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;;;OAKG;IACW,UAAI,GAAlB,UAAmB,CAAM;QACvB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED;;;;;OAKG;IACW,gBAAU,GAAxB,UAAyB,KAAU;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;SAC5C;aAAM;YACL,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAED;;;;;OAKG;IACW,oBAAc,GAA5B,UAA6B,OAAY;QACvC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE;gBACrE,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC;oBACZ,CAAC,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oBACzB,CAAC,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oBACzB,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;oBAChC,CAAC,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oBACzB,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;gBACjD,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC/B,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC/B,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;gBACtC,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;SACF;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;OAKG;IACW,oBAAc,GAA5B,UAA6B,GAAW;QACtC,OAAO,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC/B,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;YACrC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG;IACW,eAAS,GAAvB,UACE,QAAkB,EAClB,WAAuC;QAEvC,IAAI,CAAC,GAAoB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAM,OAAO,GAAe,EAAE,CAAC;QAC/B,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAU;YAC1B,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACT,IAAM,cAAc,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,WAAW,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAAC;gBAC1E,OAAO,cAAc,CAAC,IAAI,CAAC,UAAC,CAAM,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,EAAP,CAAO,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACW,wBAAkB,GAAhC,UAAiC,cAAsB;QACrD,IAAM,wBAAwB,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QACxD,IAAM,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAC/D,OAAO,aAAa,CAAC,MAAM,CAAC,UAAC,MAAqB,EAAE,SAAiB;YACnE,IAAM,iBAAiB,GAAkB,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,wBAAwB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3D,MAAM,GAAG,iBAAiB,CAAC;aAC5B;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED;;;;;OAKG;IACW,gBAAU,GAAxB,UAAyB,IAAS,EAAE,EAAY;QAC9C,IAAM,cAAc,GAAG,EAAE,UAAU,CAAC;QACpC,OAAO;YACL,IAAI,cAAc,GAAG,UAAU,EAAE;gBAC/B,OAAO;aACR;YACD,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACW,sBAAgB,GAA9B,UAA+B,GAAW,EAAE,GAAW,EAAE,SAAkB;QACzE,IAAI,SAAS,EAAE;YACb,OAAO,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;gBACzD,CAAC,CAAC,KAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAG;gBAC3B,CAAC,CAAC,KAAG,SAAW,CAAC;SACpB;aAAM,IAAI,GAAG,KAAK,GAAG,EAAE;YACtB,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC,KAAG,GAAK,CAAC;SAClF;aAAM;YACL,IAAM,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACvF,IAAM,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACvF,OAAU,cAAc,WAAM,cAAgB,CAAC;SAChD;IACH,CAAC;IAED;;;;;OAKG;IACW,mBAAa,GAA3B,UAA4B,MAAqB;QAC/C,IAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAA7C,CAA6C,CAAC,CAAC;QAC5F,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;IACxF,CAAC;IAED;;;;;OAKG;IACW,eAAS,GAAvB,UAAwB,MAAqB;QAC3C,OAAO,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,EAAF,CAAE,CAAC,CAAC;IACtF,CAAC;IAED;;;;;;OAMG;IACW,YAAM,GAApB,UAAqB,GAAe,EAAE,OAAsB;QAC1D,IAAM,KAAK,kBAAO,GAAG,CAAC,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;;;OAMG;IACW,cAAQ,GAAtB,UAAuB,WAAuB,EAAE,MAAkB;QAChE,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;QACnE,sBAAW,WAAW,EAAK,KAAK,EAAE;IACpC,CAAC;IAED;;;;;;OAMG;IACW,aAAO,GAArB,UAAsB,KAAU,EAAE,KAAU;QAC1C,OAAO,iBAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACW,eAAS,GAAvB,UAAwB,KAAU;QAChC,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACW,oBAAc,GAA5B,UAA6B,KAAa;QACxC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACW,iBAAW,GAAzB,UAA0B,KAAU;QAClC,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;OAOG;IACW,wBAAkB,GAAhC,UACE,GAAe,EACf,MAAe,EACf,YAAsB;QAEtB,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,cAAc,CAAC;QACnB,IAAM,qBAAqB,GAAG,GAAG,CAAC,SAAS,CAAC,UAAC,CAAC;YAC5C,OAAA,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAAnF,CAAmF,CACpF,CAAC;QACF,IAAI,qBAAqB,IAAI,CAAC,EAAE;YAC9B,GAAG,GAAG,IAAI,CAAC;YACX,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1D;QACD,IAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YAC9B,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAM,UAAU,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAClE,IAAM,UAAU,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAClE,OAAO,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QACH,IAAI,GAAG,KAAK,IAAI,IAAI,YAAY,KAAK,IAAI,EAAE;YACzC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SACnC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;;;OAMG;IACW,iCAA2B,GAAzC,UAA0C,GAAe,EAAE,MAAe;QACxE,OAAO,GAAG,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACnB,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACW,YAAM,GAApB,UAAqB,GAAe,EAAE,GAAY;QAChD,IAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QACvB,IAAI,GAAG,EAAE;YACP,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACnC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACnD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrB;qBAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBACvB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrB;aACF;YACD,OAAO,MAAM,CAAC;SACf;QACD,OAAO,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ;YAC/B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAb,CAAa,CAAC;YAClF,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACW,sBAAgB,GAA9B,UACE,MAA0C;QAE1C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,OAAO,EAAE,CAAC;SACX;QACD,IAAM,aAAa,GAA2B,EAAE,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACpC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACW,wBAAkB,GAAhC,UAAiC,IAA4B,EAAE,KAAU;QACvE,OAAO,IAAI,CAAC,WAAW,CAAC,UAAC,MAAM,EAAE,GAAG,EAAE,CAAC;;YACrC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,gBAAQ,GAAC,GAAG,IAAG,KAAK,KAAE;aACvB;YACD,gBAAQ,GAAC,GAAG,IAAG,MAAM,KAAE;QACzB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACW,WAAK,GAAnB,UAAoB,GAAY,EAAE,IAA4B;QAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAA5C,CAA4C,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/F,CAAC;IAEa,iBAAW,GAAzB,UAA0B,GAAQ,EAAE,IAA4B;QAC9D,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACpC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBAC3C,MAAM,GAAG,SAAS,CAAC;gBACnB,MAAM;aACP;YACD,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACW,kBAAY,GAA1B;QACE,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,MAAM,CAAC,qBAAqB,CAAC;gBAC3B,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACW,oBAAc,GAA5B,UAA6B,GAAW;QACtC,OAAO,CAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAI,CAAC;IAC9C,CAAC;IAED;;;;;;;OAOG;IACW,aAAO,GAArB,UACE,YAAwB,EACxB,aAAgB;QAEhB,6DAA6D;QAC7D,yCAAyC;QACzC,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG;YAClD,IACE,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAC5E;gBACA,aAAa;gBACb,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;aACjC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAgB,CAAC,CAAC;IACvB,CAAC;IAEa,YAAM,GAApB,UACE,IAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEa,YAAM,GAApB,UACE,IAAiE;QAEjE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IACtB,CAAC;IAEa,gBAAU,GAAxB,UACE,KAA0E;QAE1E,OAAO,KAAK,CAAC,MAAM,CAAC;IACtB,CAAC;IAED;;;;;;;OAOG;IACW,iBAAW,GAAzB,UAA6B,GAAa,EAAE,QAAgB,EAAE,QAAgB;QAC5E,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,CAAC;QAEZ,IACE,QAAQ,KAAK,QAAQ;YACrB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,QAAQ,CAAC,MAAM;YAC3B,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAC3B;YACA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,QAAQ,GAAG,QAAQ,EAAE;gBACvB,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC9B;iBAAM;gBACL,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC7B,QAAQ,IAAI,CAAC,CAAC;aACf;YACD,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;SAC9B;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEc,aAAO,GAAtB,UACE,GAAM,EACN,IAAc,EACd,KAAc;QAEd,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzB,OAAO;SACR;QACD,IAAM,CAAC,GAAS,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,OAAO,GAAQ,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;gBAClC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aACvB;YACD,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACvC,OAAO,CAAC,CAAC;IACX,CAAC;IAwEa,WAAK,GAAnB,UAAoB,GAAQ;QAAE,cAAsB;aAAtB,UAAsB,EAAtB,qBAAsB,EAAtB,IAAsB;YAAtB,6BAAsB;;QAClD,OAAO,UAAC,KAAU;YAChB,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACW,qBAAe,GAA7B,UAA8B,MAAkB;QAC9C,IAAI,IAAI,GAAwB,QAAQ,CAAC;QACzC,IACE,MAAM,CAAC,IAAI,CAAC,UAAC,KAAK;YAChB,OAAO,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5F,CAAC,CAAC,EACF;YACA,IAAI,GAAG,QAAQ,CAAC;SACjB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACW,uBAAiB,GAA/B,UAAgC,IAAY;QAC1C,IAAM,KAAK,GAAG,qBAAqB,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,KAAK,CAAC;SACd;QACD,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED;;;;;OAKG;IACW,4BAAsB,GAApC,UAAqC,IAAU,EAAE,SAAmB;QAClE,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;YAC7B,OAAO,SAAS,CAAC;SAClB;QACD,IAAI,SAAS,EAAE;YACb,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;SACxC;QACD,OAAO,CACL,IAAI,CAAC,WAAW,EAAE;YAClB,GAAG;YACH,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;gBAC5C,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC7B,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YACxB,GAAG;YACH,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CACjF,CAAC;IACJ,CAAC;IAED;;OAEG;IACW,iCAA2B,GAAzC,UACE,IAAY,EACZ,KAA+B,EAC/B,SAAmB;QAEnB,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAE;YACnC,OAAO,SAAS,CAAC;SAClB;QACD,IAAI,KAAK,KAAK,OAAO,EAAE;YACrB,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC;aAAM,IAAI,KAAK,KAAK,KAAK,EAAE;YAC1B,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;SACtC;QACD,kCAAkC;QAClC,IAAI,SAAS,EAAE;YACb,UAAU,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;SACpD;QACD,kBAAkB;QAClB,OAAO,UAAU,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACW,gBAAU,GAAxB,UACE,IAAyE;QAEzE,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;;;OAKG;IACW,cAAQ,GAAtB,UAAuB,KAAY;QACjC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAClD,OAAO,IAAI,CAAC;SACb;QACD,IAAM,SAAS,GAAG,mBAAmB,CAAC;QACtC,IAAM,SAAS,GAAG,uHAAuH,CAAC;QAC1I,IAAM,UAAU,GAAG,8IAA8I,CAAC;QAClK,IAAI,GAAW,CAAC;QAEhB,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB;YACD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAC/B,IAAM,GAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YAClE,IAAM,GAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YAClE,IAAM,GAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YAClE,GAAG,GAAG,SAAO,GAAC,UAAK,GAAC,UAAK,GAAC,MAAG,CAAC;SAC/B;aAAM,IACL,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;YACrB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;YACtB,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,SAAS,EAC9C;YACA,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;gBACrD,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC;gBACzC,CAAC,CAAC,KAAK,CAAC;SACX;aAAM;YACL,OAAO,IAAI,CAAC;SACb;QAEK,IAAA;;;wBAGQ,EAHP,SAAC,EAAE,SAAC,EAAE,SAGC,CAAC;QAEf,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACrE,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;YACnE,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IAC7D,CAAC;IAED;;;;;;OAMG;IACW,qBAAe,GAA7B,UAA8B,IAAgB,EAAE,KAAa;QAC3D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC/E,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC;YACf,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC5B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;oBACpD,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;oBAC9D,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;oBACxD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,GAAG,OAAO,GAAG,UAAU,CAAC,CAAC;iBACnE;aACF;iBAAM;gBACL,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,MAAI,CAAC,OAAO,CAAC,UAAC,GAAG;oBACf,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;wBACzD,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;wBACnE,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC7D,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,GAAG,OAAO,GAAG,UAAU,CAAC,CAAC;qBAC1E;gBACH,CAAC,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;OAMG;IACW,qBAAe,GAA7B,UACE,IAAsC,EACtC,KAAa;QAEb,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1E,OAAO,EAAE,CAAC;SACX;QACD,OAAO,IAAI,CAAC,MAAM,CAChB,UAAC,IAAI;YACH,OAAA,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAFpE,CAEoE,CACvE,CAAC;IACJ,CAAC;IAEa,2BAAqB,GAAnC,UACE,IAA6C,EAC7C,KAAa;QAFf,iBAcC;QAVC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1E,OAAO,EAAE,CAAC;SACX;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI;YACtB,IAAM,KAAK,GAAG,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtD,OAAO,CACL,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC/D,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAA,KAAG,KAAO,CAAA,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CACnF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACW,wBAAkB,GAAhC,UAAiC,KAAuC;QACtE,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,MAAc,EAAE,IAAkC;YACrE,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAC9C,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC5B,IAAM,eAAe,GACnB,UAAU,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,SAAS;oBACtD,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,8BAA8B,CAAC,IAAI,CAAC;oBAChE,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC;gBACjC,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,GAAG,CAAC,EAAE;oBACxD,OAAO,CAAC,MAAM,IAAI,eAAe,CAAC,CAAC;iBACpC;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;;;OAKG;IACW,oCAA8B,GAA5C,UAA6C,IAAkC;QAC7E,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAC,MAAM,EAAE,iBAAiB,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC,IAAI,CAAC;IAChF,CAAC;IAED;;;;;;OAMG;IACW,qBAAe,GAA7B,UAA8B,KAAoB,EAAE,SAAiB;QACnE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,EAAE,CAAC;SACX;QACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACrB,qBAAqB;YACrB,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAE;gBACvD,OAAO,CAAC,CAAC;aACV;YACD,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAE;gBACvD,OAAO,CAAC,CAAC,CAAC;aACX;YACD,wDAAwD;YACxD,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACW,UAAI,GAAlB,UAAmB,CAAS;QAC1B,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,OAAO,KAAG,IAAM,CAAC;SAClB;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;YACjC,2BAA2B;YAC3B,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;SACpB;QACD,iBAAiB;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACW,cAAQ,GAAtB,UAAuB,KAAc,EAAE,QAA0B,EAAE,KAAS;QAAT,sBAAA,EAAA,SAAS;QAC1E,IAAM,MAAM,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,EAAE,CAAC;SACX;QACD,IAAM,eAAe,GAAG,KAAG,KAAO,CAAC;QACnC,IAAI,eAAe,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YACvC,OAAO,eAAe,CAAC;SACxB;QACD,IAAM,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;QAC7B,QAAQ,QAAQ,EAAE;YAChB,KAAK,QAAQ;gBACX,OAAO,CACL,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;oBACvD,MAAM;oBACN,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAC/E,CAAC;YAEJ,KAAK,KAAK;gBACR,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC;SAC5D;IACH,CAAC;IAED;;OAEG;IACW,sBAAgB,GAA9B,UACE,QAAoB,EACpB,eAAyB,EACzB,cAAwB;QAExB,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,cAAc,EAAE;oBAChF,OAAO,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;iBACvE;qBAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;oBACnE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC3C;aACF;iBAAM,IAAI,eAAe,EAAE;gBAC1B,OAAO,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;aAC/D;iBAAM;gBACL,OAAO,SAAS,CAAC;aAClB;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEa,4BAAsB,GAApC,UAAqC,QAAoB;QACvD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,MAAM,IAAI,QAAQ,EAAE;YACtD,IAAI,CAAC,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,EAAE;gBACvD,OAAO,IAAI,CAAC;aACb;YACD,IAAI,UAAU,IAAI,QAAQ,EAAE;gBAC1B,OAAO,KAAG,QAAQ,CAAC,QAAU,CAAC;aAC/B;YACD,IAAI,OAAO,IAAI,QAAQ,EAAE;gBACvB,OAAO,KAAK,CAAC,UAAU,CACrB,IAAI,IAAI,CACN,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACrF,CAAC,WAAW,EAAE,CAChB,CAAC;aACH;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACH,YAAC;AAAD,CAAC,AA9uCD,IA8uCC;AA9uCY,sBAAK","sourcesContent":["/**\n * LINKURIOUS CONFIDENTIAL\n * Copyright Linkurious SAS 2012 - 2017\n *\n * Created by maximeallex on 2017-03-13.\n */\n\n'use strict';\n\nimport merge from 'lodash/merge';\nimport sortBy from 'lodash/sortBy';\nimport isEqual from 'lodash/isEqual';\nimport defaults from 'lodash/defaults';\nimport isObject from 'lodash/isObject';\nimport map from 'lodash/map';\nimport uniq from 'lodash/uniq';\nimport includes from 'lodash/includes';\nimport values from 'lodash/values';\nimport partition from 'lodash/partition';\nimport concat from 'lodash/concat';\nimport get from 'lodash/get';\nimport keys from 'lodash/keys';\nimport isString from 'lodash/isString';\nimport mapValues from 'lodash/mapValues';\nimport sumBy from 'lodash/sumBy';\nimport sortedUniqBy from 'lodash/sortedUniqBy';\nimport {GenericObject, LkEdgeData, LkNodeData, LkProperty} from '@linkurious/rest-client';\nimport {Color} from 'types/utilities';\n\nimport {Edge, EdgeList, Node, NodeList} from '../ogma/models';\n\nexport {\n  merge,\n  sortBy,\n  isEqual,\n  defaults,\n  isObject,\n  map,\n  uniq,\n  includes,\n  values,\n  partition,\n  concat,\n  get,\n  keys,\n  isString,\n  mapValues,\n  sumBy,\n  sortedUniqBy\n};\n\nexport const DEFAULT_DEBOUNCE_TIME = 375;\nexport const NO_CATEGORIES = 'no_categories';\nexport const CAPTION_HEURISTIC: string[] = [\n  'label',\n  'Label',\n  'name',\n  'Name',\n  'title',\n  'Title',\n  'rdfs:label'\n];\nexport const UNAVAILABLE_KEY = 'no key';\nexport const UNAVAILABLE_VALUE = 'no value';\nexport const UNACCEPTABLE_URL = [null, undefined, 'localhost', '127.0.0.1'];\nexport const UNGUARDED_PAGES: string[] = [\n  'admin/data',\n  'admin/data/new',\n  'admin/datasources',\n  'datasource/'\n];\nexport const BUILTIN_GROUP_INDEX_MAP = {\n  admin: 0,\n  'source manager': 1,\n  'read, edit and delete': 2,\n  'read and edit': 3,\n  read: 4\n};\n\nconst HTML_COLORS: GenericObject<{hex: string; rgb: string}> = {\n  lightsalmon: {hex: '#FFA07A', rgb: 'rbg(255,160,122)'},\n  salmon: {hex: '#FA8072', rgb: 'rgb(250,128,114)'},\n  darksalmon: {hex: '#E9967A', rgb: 'rgb(233,150,122)'},\n  lightcoral: {hex: '#F08080', rgb: 'rgb(240,128,128)'},\n  indianred: {hex: '#CD5C5C', rgb: 'rgb(205,92,92)'},\n  crimson: {hex: '#DC143C', rgb: 'rgb(220,20,60)'},\n  firebrick: {hex: '#B22222', rgb: 'rgb(178,34,34)'},\n  red: {hex: '#FF0000', rgb: 'rgb(255,0,0)'},\n  darkred: {hex: '#8B0000', rgb: 'rgb(139,0,0)'},\n  coral: {hex: '#FF7F50', rgb: 'rgb(255,127,80)'},\n  tomato: {hex: '#FF6347', rgb: 'rgb(255,99,71)'},\n  orangered: {hex: '#FF4500', rgb: 'rgb(255,69,0)'},\n  gold: {hex: '#FFD700', rgb: 'rgb(255,215,0)'},\n  orange: {hex: '#FFA500', rgb: 'rgb(255,165,0)'},\n  darkorange: {hex: '#FF8C00', rgb: 'rgb(255,140,0)'},\n  lightyellow: {hex: '#FFFFE0', rgb: 'rgb(255,255,224)'},\n  lemonchiffon: {hex: '#FFFACD', rgb: 'rgb(255,250,205)'},\n  lightgoldenrodyellow: {hex: '#FAFAD2', rgb: 'rgb(250,250,210)'},\n  papayawhip: {hex: '#FFEFD5', rgb: 'rgb(255,239,213)'},\n  moccasin: {hex: '#FFE4B5', rgb: 'rgb(255,228,181)'},\n  peachpuff: {hex: '#FFDAB9', rgb: 'rgb(255,218,185)'},\n  palegoldenrod: {hex: '#EEE8AA', rgb: 'rgb(238,232,170)'},\n  khaki: {hex: '#F0E68C', rgb: 'rgb(240,230,140)'},\n  darkkhaki: {hex: '#BDB76B', rgb: 'rgb(189,183,107)'},\n  yellow: {hex: '#FFFF00', rgb: 'rgb(255,255,0)'},\n  lawngreen: {hex: '#7CFC00', rgb: 'rgb(124,252,0)'},\n  chartreuse: {hex: '#7FFF00', rgb: 'rgb(127,255,0)'},\n  limegreen: {hex: '#32CD32', rgb: 'rgb(50,205,50)'},\n  lime: {hex: '#00FF00', rgb: 'rgb(0.255.0)'},\n  forestgreen: {hex: '#228B22', rgb: 'rgb(34,139,34)'},\n  green: {hex: '#008000', rgb: 'rgb(0,128,0)'},\n  darkgreen: {hex: '#006400', rgb: 'rgb(0,100,0)'},\n  greenyellow: {hex: '#ADFF2F', rgb: 'rgb(173,255,47)'},\n  yellowgreen: {hex: '#9ACD32', rgb: 'rgb(154,205,50)'},\n  springgreen: {hex: '#00FF7F', rgb: 'rgb(0,255,127)'},\n  mediumspringgreen: {hex: '#00FA9A', rgb: 'rgb(0,250,154)'},\n  lightgreen: {hex: '#90EE90', rgb: 'rgb(144,238,144)'},\n  palegreen: {hex: '#98FB98', rgb: 'rgb(152,251,152)'},\n  darkseagreen: {hex: '#8FBC8F', rgb: 'rgb(143,188,143)'},\n  mediumseagreen: {hex: '#3CB371', rgb: 'rgb(60,179,113)'},\n  seagreen: {hex: '#2E8B57', rgb: 'rgb(46,139,87)'},\n  olive: {hex: '#808000', rgb: 'rgb(128,128,0)'},\n  darkolivegreen: {hex: '#556B2F', rgb: 'rgb(85,107,47)'},\n  olivedrab: {hex: '#6B8E23', rgb: 'rgb(107,142,35)'},\n  lightcyan: {hex: '#E0FFFF', rgb: 'rgb(224,255,255)'},\n  cyan: {hex: '#00FFFF', rgb: 'rgb(0,255,255)'},\n  aqua: {hex: '#00FFFF', rgb: 'rgb(0,255,255)'},\n  aquamarine: {hex: '#7FFFD4', rgb: 'rgb(127,255,212)'},\n  mediumaquamarine: {hex: '#66CDAA', rgb: 'rgb(102,205,170)'},\n  paleturquoise: {hex: '#AFEEEE', rgb: 'rgb(175,238,238)'},\n  turquoise: {hex: '#40E0D0', rgb: 'rgb(64,224,208)'},\n  mediumturquoise: {hex: '#48D1CC', rgb: 'rgb(72,209,204)'},\n  darkturquoise: {hex: '#00CED1', rgb: 'rgb(0,206,209)'},\n  lightseagreen: {hex: '#20B2AA', rgb: 'rgb(32,178,170)'},\n  cadetblue: {hex: '#5F9EA0', rgb: 'rgb(95,158,160)'},\n  darkcyan: {hex: '#008B8B', rgb: 'rgb(0,139,139)'},\n  teal: {hex: '#008080', rgb: 'rgb(0,128,128)'},\n  powderblue: {hex: '#B0E0E6', rgb: 'rgb(176,224,230)'},\n  lightblue: {hex: '#ADD8E6', rgb: 'rgb(173,216,230)'},\n  lightskyblue: {hex: '#87CEFA', rgb: 'rgb(135,206,250)'},\n  skyblue: {hex: '#87CEEB', rgb: 'rgb(135,206,235)'},\n  deepskyblue: {hex: '#00BFFF', rgb: 'rgb(0,191,255)'},\n  lightsteelblue: {hex: '#B0C4DE', rgb: 'rgb(176,196,222)'},\n  dodgerblue: {hex: '#1E90FF', rgb: 'rgb(30,144,255)'},\n  cornflowerblue: {hex: '#6495ED', rgb: 'rgb(100,149,237)'},\n  steelblue: {hex: '#4682B4', rgb: 'rgb(70,130,180)'},\n  royalblue: {hex: '#4169E1', rgb: 'rgb(65,105,225)'},\n  blue: {hex: '#0000FF', rgb: 'rgb(0,0,255)'},\n  mediumblue: {hex: '#0000CD', rgb: 'rgb(0,0,205)'},\n  darkblue: {hex: '#00008B', rgb: 'rgb(0,0,139)'},\n  navy: {hex: '#000080', rgb: 'rgb(0,0,128)'},\n  midnightblue: {hex: '#191970', rgb: 'rgb(25,25,112)'},\n  mediumslateblue: {hex: '#7B68EE', rgb: 'rgb(123,104,238)'},\n  slateblue: {hex: '#6A5ACD', rgb: 'rgb(106,90,205)'},\n  darkslateblue: {hex: '#483D8B', rgb: 'rgb(72,61,139)'},\n  lavender: {hex: '#E6E6FA', rgb: 'rgb(230,230,250)'},\n  thistle: {hex: '#D8BFD8', rgb: 'rgb(216,191,216)'},\n  plum: {hex: '#DDA0DD', rgb: 'rgb(221,160,221)'},\n  violet: {hex: '#EE82EE', rgb: 'rgb(238,130,238)'},\n  orchid: {hex: '#DA70D6', rgb: 'rgb(218,112,214)'},\n  fuchsia: {hex: '#FF00FF', rgb: 'rgb(255,0,255)'},\n  magenta: {hex: '#FF00FF', rgb: 'rgb(255,0,255)'},\n  mediumorchid: {hex: '#BA55D3', rgb: 'rgb(186,85,211)'},\n  mediumpurple: {hex: '#9370DB', rgb: 'rgb(147,112,219)'},\n  blueviolet: {hex: '#8A2BE2', rgb: 'rgb(138,43,226)'},\n  darkviolet: {hex: '#9400D3', rgb: 'rgb(148,0,211)'},\n  darkorchid: {hex: '#9932CC', rgb: 'rgb(153,50,204)'},\n  darkmagenta: {hex: '#8B008B', rgb: 'rgb(139,0,139)'},\n  purple: {hex: '#800080', rgb: 'rgb(128,0,128)'},\n  indigo: {hex: '#4B0082', rgb: 'rgb(75,0,130)'},\n  pink: {hex: '#FFC0CB', rgb: 'rgb(255,192,203)'},\n  lightpink: {hex: '#FFB6C1', rgb: 'rgb(255,182,193)'},\n  hotpink: {hex: '#FF69B4', rgb: 'rgb(255,105,180)'},\n  deeppink: {hex: '#FF1493', rgb: 'rgb(255,20,147)'},\n  palevioletred: {hex: '#DB7093', rgb: 'rgb(219,112,147)'},\n  mediumvioletred: {hex: '#C71585', rgb: 'rgb(199,21,133)'},\n  white: {hex: '#FFFFFF', rgb: 'rgb(255,255,255)'},\n  snow: {hex: '#FFFAFA', rgb: 'rgb(255,250,250)'},\n  honeydew: {hex: '#F0FFF0', rgb: 'rgb(240,255,240)'},\n  mintcream: {hex: '#F5FFFA', rgb: 'rgb(245,255,250)'},\n  azure: {hex: '#F0FFFF', rgb: 'rgb(240,255,255)'},\n  aliceblue: {hex: '#F0F8FF', rgb: 'rgb(240,248,255)'},\n  ghostwhite: {hex: '#F8F8FF', rgb: 'rgb(248,248,255)'},\n  whitesmoke: {hex: '#F5F5F5', rgb: 'rgb(245,245,245)'},\n  seashell: {hex: '#FFF5EE', rgb: 'rgb(255,245,238)'},\n  beige: {hex: '#F5F5DC', rgb: 'rgb(245,245,220)'},\n  oldlace: {hex: '#FDF5E6', rgb: 'rgb(253,245,230)'},\n  floralwhite: {hex: '#FFFAF0', rgb: 'rgb(255,250,240)'},\n  ivory: {hex: '#FFFFF0', rgb: 'rgb(255,255,240)'},\n  antiquewhite: {hex: '#FAEBD7', rgb: 'rgb(250,235,215)'},\n  linen: {hex: '#FAF0E6', rgb: 'rgb(250,240,230)'},\n  lavenderblush: {hex: '#FFF0F5', rgb: 'rgb(255,240,245)'},\n  mistyrose: {hex: '#FFE4E1', rgb: 'rgb(255,228,225)'},\n  gainsboro: {hex: '#DCDCDC', rgb: 'rgb(220,220,220)'},\n  lightgray: {hex: '#D3D3D3', rgb: 'rgb(211,211,211)'},\n  silver: {hex: '#C0C0C0', rgb: 'rgb(192,192,192)'},\n  darkgray: {hex: '#A9A9A9', rgb: 'rgb(169,169,169)'},\n  gray: {hex: '#808080', rgb: 'rgb(128,128,128)'},\n  dimgray: {hex: '#696969', rgb: 'rgb(105,105,105)'},\n  lightslategray: {hex: '#778899', rgb: 'rgb(119,136,153)'},\n  slategray: {hex: '#708090', rgb: 'rgb(112,128,144)'},\n  darkslategray: {hex: '#2F4F4F', rgb: 'rgb(47,79,79)'},\n  black: {hex: '#000000', rgb: 'rgb(0,0,0)'},\n  cornsilk: {hex: '#FFF8DC', rgb: 'rgb(255,248,220)'},\n  blanchedalmond: {hex: '#FFEBCD', rgb: 'rgb(255,235,205)'},\n  bisque: {hex: '#FFE4C4', rgb: 'rgb(255,228,196)'},\n  navajowhite: {hex: '#FFDEAD', rgb: 'rgb(255,222,173)'},\n  wheat: {hex: '#F5DEB3', rgb: 'rgb(245,222,179)'},\n  burlywood: {hex: '#DEB887', rgb: 'rgb(222,184,135)'},\n  tan: {hex: '#D2B48C', rgb: 'rgb(210,180,140)'},\n  rosybrown: {hex: '#BC8F8F', rgb: 'rgb(188,143,143)'},\n  sandybrown: {hex: '#F4A460', rgb: 'rgb(244,164,96)'},\n  goldenrod: {hex: '#DAA520', rgb: 'rgb(218,165,32)'},\n  peru: {hex: '#CD853F', rgb: 'rgb(205,133,63)'},\n  chocolate: {hex: '#D2691E', rgb: 'rgb(210,105,30)'},\n  saddlebrown: {hex: '#8B4513', rgb: 'rgb(139,69,19)'},\n  sienna: {hex: '#A0522D', rgb: 'rgb(160,82,45)'},\n  brown: {hex: '#A52A2A', rgb: 'rgb(165,42,42)'},\n  maroon: {hex: '#800000', rgb: 'rgb(128,0,0)'}\n};\n\nconst URL_PATTERN = /([a-zA-Z][a-zA-Z0-9\\+\\-\\.]*:\\/\\/[^\\s]+)/i;\nconst IMAGE_PATTERN = /\\S+\\.(gif|jpe?g|tiff|png|bmp|svg)$/i;\nlet requestInc = 0;\n\nexport class Tools {\n  /**\n   * Return 'image' or 'url' depending on the given string\n   *\n   * @param {string} value\n   * @return {\"image\" | \"url\"}\n   */\n  public static getType(value: string): 'image' | 'url' | 'imageUrl' | undefined {\n    if (Tools.isImage(value) && Tools.isUrl(value)) {\n      return 'imageUrl';\n    }\n\n    if (Tools.isImage(value)) {\n      return 'image';\n    }\n\n    if (Tools.isUrl(value)) {\n      return 'url';\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {number} duration\n   * @param {T} [returnValue]\n   * @return {Promise<T>}\n   */\n  public static promiseDelay<T>(duration: number, returnValue?: T): Promise<T> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(returnValue);\n      }, duration);\n    });\n  }\n\n  /*\n   * Sanitize the url params to a object\n   */\n  public static sanitizeUrlParams(locationSearch: string): any {\n    const rawParameters = locationSearch.replace('?', '');\n    return rawParameters.split('&').reduce((res, acc) => {\n      const param = acc.split('=');\n      if (param[0]) {\n        return {\n          ...res,\n          [param[0]]: param[1]\n        };\n      }\n      return res;\n    }, {});\n  }\n\n  /**\n   * Return true if the given string is an url that match the schema handled by LKE\n   *\n   * @param {string}  value\n   * @return {boolean}\n   */\n  private static isUrl(value: string): boolean {\n    return URL_PATTERN.test(value);\n  }\n\n  /**\n   * Return true if the given string is an url with an image extension\n   *\n   * @param {string}  value\n   * @return {boolean}\n   */\n  private static isImage(value: string): boolean {\n    return IMAGE_PATTERN.test(value);\n  }\n\n  /**\n   * Return true if `n` is (or can be parsed as) a float, but is NOT an integer\n   *\n   * @param {any} n\n   * @return {number} a number (NaN is `n` cannot be parsed as a number)\n   */\n  public static parseNumber(n: unknown): number {\n    // string: try to parse as number (allow ',' as decimal separator)\n    if (typeof n === 'string') {\n      // prevent the empty string to be parsed as 0\n      if (n.trim() === '') {\n        return Number.NaN;\n      }\n\n      n = +n.replace(',', '.');\n    }\n\n    // (the string could not be parsed) OR (it was neither string nor number)\n    if (typeof n !== 'number') {\n      return Number.NaN;\n    }\n\n    // false for NaN, +Infinity, -Infinity\n    if (!isFinite(n)) {\n      return Number.NaN;\n    }\n\n    return n;\n  }\n\n  /**\n   * Returns true if:\n   * - n is an Integer\n   * - n is a string that represents an Integer (allow '.' or ',' as decimal separator)\n   *\n   * @param {any} n\n   * @return {boolean}\n   */\n  public static isInt(n: any) {\n    n = Tools.parseNumber(n);\n\n    // (not NaN) && (is floats)\n    return Tools.isDefined(n) && n === n && n % 1 === 0;\n  }\n\n  /**\n   * Return true if `n` is (or can be parsed as) a float, but is NOT an integer\n   *\n   * @param {any} n\n   * @return {boolean}\n   */\n  public static isFloat(n: any): boolean {\n    n = Tools.parseNumber(n);\n\n    // (not NaN) && (is float excluding integers)\n    return n === n && n % 1 !== 0;\n  }\n\n  /**\n   * Return true if `n` is (or can be parsed as) a number\n   *\n   * @param {any} n\n   * @return {boolean}\n   */\n  public static isNumber(n: any): boolean {\n    n = Tools.parseNumber(n);\n    return Tools.isDefined(n) && n === n;\n  }\n\n  /**\n   * Return true if `n` is (or can be parsed as) a date\n   *\n   * @param {any} n\n   * @return {boolean}\n   */\n  public static isDate(n: any): boolean {\n    const d = new Date(n);\n    if (Number.isNaN(d.getTime())) {\n      return false;\n    }\n    return d.toISOString().slice(0, 10) === n;\n  }\n\n  /**\n   * Parse the given value and return a float number or NaN\n   *\n   * @param {any} n\n   * @return {number}\n   */\n  public static parseFloat(n: unknown): number {\n    return Tools.parseNumber(n);\n  }\n\n  /**\n   * Return a shortened version of a number\n   *\n   * @param {number} number\n   * @return {string}\n   */\n  public static shortenNumber(number: number): string {\n    let div = 1;\n    let suffix = '';\n    const sign = number < 0 ? '-' : '';\n    number = Math.abs(number);\n\n    if (number >= 1000000) {\n      div = 1000000;\n      suffix = 'M';\n    } else if (number >= 1000) {\n      div = 1000;\n      suffix = 'k';\n    }\n    const nn = number / div;\n    // if there is a decimal value and nn < 10\n    if (nn < 10 && nn % 1 !== 0) {\n      return sign + nn.toFixed(1) + suffix;\n    } else {\n      return sign + Math.floor(nn) + suffix;\n    }\n  }\n\n  /**\n   * Return a parse decimal with a max of 6 decimal values\n   *\n   * @param {'floor' | 'ceil'} round\n   * @param {number} min\n   * @param {number} max\n   * @param {number} value\n   * @return {number}\n   */\n  public static parseDecimal(\n    round: 'floor' | 'ceil',\n    min: number,\n    max: number,\n    value: number\n  ): number {\n    const maxDecimal = 6;\n\n    if (!Tools.isDefined(value) || Tools.isInt(value)) {\n      return value;\n    }\n\n    if (!Tools.isDefined(min) || !Tools.isDefined(max)) {\n      const size = (value + '').split('.')[1].length;\n      return size > 6 ? parseFloat(value.toFixed(6)) : value;\n    }\n\n    const nrSize = Math[round](max - min).toString().length;\n    if (nrSize >= maxDecimal) {\n      return parseFloat(value.toFixed(1));\n    } else {\n      return parseFloat(value.toFixed(maxDecimal - nrSize));\n    }\n  }\n\n  /**\n   * Format number as a readable number with en format\n   * see http://www.statisticalconsultants.co.nz/blog/how-the-world-separates-its-digits.html\n   * todo: use space a delimiter in counties that accept this notation.\n   *\n   * @param {number} n\n   * @return {string}\n   */\n  public static formatNumber(n: number) {\n    return n.toLocaleString('en', {maximumFractionDigits: 3});\n  }\n\n  /**\n   * From \"+03:00\" return the offset in milliseconds\n   * @param timezone\n   */\n  public static timezoneToMilliseconds(timezone: string | undefined): number {\n    if (timezone === undefined) {\n      return 0;\n    }\n    if (timezone === 'Z') {\n      return 0;\n    }\n    const sign = timezone[0];\n    const [hours, minutes] = timezone.slice(1).split(':');\n    return sign === '+'\n      ? this.sanitizeFormattedNumber(hours) * 3.6e6 + this.sanitizeFormattedNumber(minutes) * 60000\n      : (this.sanitizeFormattedNumber(hours) * 3.6e6 +\n          this.sanitizeFormattedNumber(minutes) * 60000) *\n          -1;\n  }\n\n  public static sanitizeFormattedNumber(str: string): number {\n    if (str.length === 2 && str.startsWith('0')) {\n      return Tools.parseNumber(str[1]);\n    }\n    return Tools.parseNumber(str);\n  }\n\n  /**\n   * Return a formatted date as a string\n   */\n  public static formatDate(\n    isoString: string,\n    isDatetime?: boolean,\n    timezone?: number\n  ): string | null {\n    // The date received from the server will be always in seconds\n    let offsetDate: string | number = isoString;\n    if (timezone !== undefined) {\n      offsetDate = new Date(isoString).getTime() + timezone * 1000;\n    }\n    const dateObject = new Date(offsetDate);\n\n    if (isNaN(dateObject.getUTCFullYear())) {\n      return null;\n    }\n    let formattedDate =\n      dateObject.getFullYear() +\n      '-' +\n      ((dateObject.getUTCMonth() + 1).toString().length === 1\n        ? '0' + (dateObject.getUTCMonth() + 1)\n        : dateObject.getUTCMonth() + 1) +\n      '-' +\n      (dateObject.getUTCDate().toString().length === 1\n        ? '0' + dateObject.getUTCDate()\n        : dateObject.getUTCDate());\n\n    if (isDatetime) {\n      formattedDate +=\n        ' ' +\n        (dateObject.getUTCHours().toString().length === 1\n          ? '0' + dateObject.getUTCHours()\n          : dateObject.getUTCHours()) +\n        ':' +\n        (dateObject.getUTCMinutes().toString().length === 1\n          ? '0' + dateObject.getUTCMinutes()\n          : dateObject.getUTCMinutes()) +\n        ':' +\n        (dateObject.getUTCSeconds().toString().length === 1\n          ? '0' + dateObject.getUTCSeconds()\n          : dateObject.getUTCSeconds());\n    }\n    return formattedDate;\n  }\n\n  /**\n   * Return a clone of an object\n   *\n   * @param o\n   * @return {any}\n   */\n  public static clone(o: any) {\n    return typeof o === 'object'\n      ? JSON.parse(\n          JSON.stringify(o, (k, v) => {\n            return v instanceof Set ? {} : v;\n          })\n        )\n      : o;\n  }\n\n  /**\n   * Return a copy of an object\n   *\n   * @param o\n   * @return {any}\n   */\n  public static copy(o: any): any {\n    if (typeof o === 'object') {\n      return Object.assign(o);\n    }\n    return o;\n  }\n\n  /**\n   * Return a clone of a Node or Array<Node>\n   *\n   * @param nodes\n   * @return {any}\n   */\n  public static cloneNodes(nodes: any) {\n    if (!Array.isArray(nodes)) {\n      return this.sanitizeStyles(nodes.toJSON());\n    } else {\n      return this.sanitizeStyles(JSON.parse(JSON.stringify(nodes)));\n    }\n  }\n\n  /**\n   * Return a node or a Array<Node> with the styles reset\n   *\n   * @param element\n   * @return {any}\n   */\n  public static sanitizeStyles(element: any) {\n    if (Array.isArray(element)) {\n      if (element[0] && element[0].attributes && element[0].attributes.halo) {\n        element.map((e) => {\n          e.attributes.halo = null;\n          e.attributes.icon = null;\n          e.attributes.outerStroke = null;\n          e.attributes.text = null;\n          return e;\n        });\n      }\n    } else {\n      if (element.attributes && element.attributes.halo) {\n        element.attributes.halo = null;\n        element.attributes.icon = null;\n        element.attributes.outerStroke = null;\n        element.attributes.text = null;\n      }\n    }\n    return element;\n  }\n\n  /**\n   * Return a propertyKey from a property path as string\n   *\n   * @param {string} key\n   * @return {string}\n   */\n  public static getPropertyKey(key: string): string {\n    return key.includes('properties')\n      ? key.replace('data.properties.', '')\n      : key.replace('data.', '');\n  }\n\n  /**\n   * mapSeries implementation\n   *\n   * @param elements\n   * @param mapFunction\n   * @return {Promise<Array>}\n   */\n  public static mapSeries<T>(\n    elements: Array<T>,\n    mapFunction: (any: any) => Promise<any>\n  ): Promise<any> {\n    let p: Promise<number> = Promise.resolve(0);\n    const results: Array<any> = [];\n    elements.forEach((element: T) => {\n      p = p.then(function () {\n        const wrappedPromise = Promise.resolve().then(() => mapFunction(element));\n        return wrappedPromise.then((r: any) => results.push(r));\n      });\n    });\n    return p.then(() => results);\n  }\n\n  /**\n   * Return sourceKey or sourceIndex value from current url + its type\n   *\n   * @param {string} locationSearch\n   * @return {Array<string>}\n   */\n  public static getSourceParameter(locationSearch: string): Array<string> {\n    const sourceParameterHeuristic = ['key', 'sourceIndex'];\n    const urlParameters = locationSearch.slice(1).split('&') || [];\n    return urlParameters.reduce((result: Array<string>, parameter: string) => {\n      const splittedParameter: Array<string> = parameter.split('=');\n      if (sourceParameterHeuristic.includes(splittedParameter[0])) {\n        result = splittedParameter;\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * take only the last response from server\n   *\n   * @param self\n   * @param fn\n   */\n  public static keepLatest(self: any, fn: Function): any {\n    const currentRequest = ++requestInc;\n    return function () {\n      if (currentRequest < requestInc) {\n        return;\n      }\n      return fn.apply(self, arguments);\n    };\n  }\n\n  /**\n   * Return a readable string of an interval\n   *\n   * @param {number} min\n   * @param {number} max\n   * @param {number} uniqValue\n   * @return {string}\n   */\n  public static intervalToString(min: number, max: number, uniqValue?: number): string {\n    if (uniqValue) {\n      return Tools.isNumber(uniqValue) && !Tools.isInt(uniqValue)\n        ? `${uniqValue.toFixed(2)}`\n        : `${uniqValue}`;\n    } else if (min === max) {\n      return Tools.isNumber(min) && !Tools.isInt(min) ? `${min.toFixed(2)}` : `${min}`;\n    } else {\n      const parsedMinValue = Tools.isNumber(min) && !Tools.isInt(min) ? min.toFixed(2) : min;\n      const parsedMaxValue = Tools.isNumber(max) && !Tools.isInt(max) ? max.toFixed(2) : max;\n      return `${parsedMinValue} - ${parsedMaxValue}`;\n    }\n  }\n\n  /**\n   * Return the min and max of a set of values\n   *\n   * @param {Array<number>} values\n   * @return {[number , number]}\n   */\n  public static getBoundaries(values: Array<number>): [number, number] | undefined {\n    const sanitizedValues = values.filter((v) => Tools.isDefined(v) && !isNaN(v) && v !== null);\n    if (sanitizedValues.length === 0) {\n      return undefined;\n    }\n    return [Math.min.apply(null, sanitizedValues), Math.max.apply(null, sanitizedValues)];\n  }\n\n  /**\n   * Return an array of number from an array of string\n   *\n   * @param {Array<any>} values\n   * @return {Array<number>}\n   */\n  public static toNumbers(values: Array<string>): Array<number> {\n    return values.filter((v) => Tools.isDefined(v) && Tools.isNumber(v)).map((v) => +v);\n  }\n\n  /**\n   * Remove indexes from an Array\n   *\n   * @param {Array<any>} arr\n   * @param {Array<number>} indexes\n   * @return {Array<any>}\n   */\n  public static pullAt(arr: Array<any>, indexes: Array<number>): Array<any> {\n    const array = [...arr];\n    for (let i = indexes.length - 1; i >= 0; --i) {\n      array.splice(indexes[i], 1);\n    }\n    return array;\n  }\n\n  /**\n   * Merge two array keeping only the distinct elements\n   *\n   * @param {Array<any>} originalArr\n   * @param {Array<number>} newArr\n   * @return {Array<any>}\n   */\n  public static pushUniq(originalArr: Array<any>, newArr: Array<any>): Array<any> {\n    const array = newArr.filter((item) => !originalArr.includes(item));\n    return [...originalArr, ...array];\n  }\n\n  /**\n   * Check equality of two values\n   *\n   * @param {any} value\n   * @param {any} other\n   * @return {boolean}\n   */\n  public static isEqual(value: any, other: any): boolean {\n    return isEqual(value, other);\n  }\n\n  /**\n   * Check that a value is defined : not null and not undefined\n   *\n   * @param {any} value\n   * @return {boolean}\n   */\n  public static isDefined(value: any): boolean {\n    return value !== undefined && value !== null;\n  }\n\n  /**\n   * Return true if a string is not composed only by invisible char\n   *\n   * @param {string} value\n   * @return {boolean}\n   */\n  public static isStringFilled(value: string): boolean {\n    if (typeof value === 'string') {\n      return value.trim() !== '';\n    }\n    return true;\n  }\n\n  /**\n   * Return true if a value is not undefined, not null and not an empty string\n   *\n   * @param value\n   * @return {boolean}\n   */\n  public static valueExists(value: any): boolean {\n    return Tools.isDefined(value) && Tools.isStringFilled(value);\n  }\n\n  /**\n   * Sort an array alphabetically depending of a key if array is an array of object\n   *\n   * @param {Array<any>} arr\n   * @param {string} objKey\n   * @param {boolean} addUndefined\n   * @return {Array<any>}\n   */\n  public static sortAlphabetically(\n    arr: Array<any>,\n    objKey?: string,\n    addUndefined?: boolean\n  ): Array<any> {\n    let set = false;\n    let undefinedValue;\n    const indexOfUndefinedValue = arr.findIndex((v) =>\n      objKey ? typeof v === 'object' && !Tools.isDefined(v[objKey]) : !Tools.isDefined(v)\n    );\n    if (indexOfUndefinedValue >= 0) {\n      set = true;\n      undefinedValue = arr.splice(indexOfUndefinedValue, 1)[0];\n    }\n    const sortedArr = arr.sort((a, b) => {\n      const aK = objKey ? a[objKey] : a;\n      const bK = objKey ? b[objKey] : b;\n      const sanitizedA = typeof aK === 'string' ? aK.toLowerCase() : aK;\n      const sanitizedB = typeof bK === 'string' ? bK.toLowerCase() : bK;\n      return sanitizedA < sanitizedB ? -1 : sanitizedA > sanitizedB ? 1 : 0;\n    });\n    if (set === true && addUndefined === true) {\n      sortedArr.unshift(undefinedValue);\n    }\n    return sortedArr;\n  }\n\n  /**\n   * Sort an form array alphabetically depending of a key if array is an array of object\n   *\n   * @param {Array<any>} arr\n   * @param {string} objKey\n   * @return {Array<any>}\n   */\n  public static sortFormArrayAlphabetically(arr: Array<any>, objKey?: string) {\n    return arr.sort((a, b) => {\n      const aK = objKey ? a.value[objKey].toLowerCase() : a;\n      const bK = objKey ? b.value[objKey].toLowerCase() : b;\n      return aK < bK ? -1 : aK > bK ? 1 : 0;\n    });\n  }\n\n  /**\n   * Return an Array without duplicated keys\n   *\n   * @param {Array<any>} arr\n   * @param {string} key\n   * @return {Array<any>}\n   */\n  public static uniqBy(arr: Array<any>, key?: string): Array<any> {\n    const seen = new Set();\n    if (key) {\n      const result = [];\n      for (let i = 0; i < arr.length; ++i) {\n        if (arr[i] && arr[i][key] && !seen.has(arr[i][key])) {\n          seen.add(arr[i][key]);\n          result.push(arr[i]);\n        } else if (!arr[i][key]) {\n          result.push(arr[i]);\n        }\n      }\n      return result;\n    }\n    return typeof arr[0] === 'object'\n      ? Array.from(new Set(arr.map((v) => JSON.stringify(v)))).map((v) => JSON.parse(v))\n      : Array.from(new Set(arr));\n  }\n\n  /*\n   * Return an array with repeated values depending of the count\n   */\n  public static getExtendedArray(\n    values: Array<{value: any; count: number}>\n  ): Array<number | string> {\n    if (!Tools.isDefined(values) || values.length === 0) {\n      return [];\n    }\n    const extendedArray: Array<number | string> = [];\n    values.forEach((value) => {\n      for (let i = 0; i < value.count; i++) {\n        extendedArray.push(value.value);\n      }\n    });\n    return extendedArray;\n  }\n\n  /**\n   * Recreate a nested object from a array of string, defining the path of a value and a final value\n   *\n   * @param {Array<string>} path\n   * @param value\n   * @return {any}\n   */\n  public static getNestedStructure(path: Array<string | number>, value: any): any {\n    return path.reduceRight((result, key, i) => {\n      if (i === path.length - 1) {\n        return {[key]: value};\n      }\n      return {[key]: result};\n    }, {});\n  }\n\n  /**\n   * Return a value from a nested object depending on a keyPath\n   */\n  public static getIn(ref: unknown, path: Array<string | number>): any {\n    return path.reduce((p, c) => (p && p[c] !== undefined ? p[c] : undefined), Tools.clone(ref));\n  }\n\n  public static getInUnsafe(ref: any, path: Array<string | number>): any {\n    let result = ref;\n    for (let i = 0; i < path.length; ++i) {\n      if (result === undefined || result === null) {\n        result = undefined;\n        break;\n      }\n      result = result[path[i]];\n    }\n    return result;\n  }\n\n  /**\n   * Force browser to repaint before calling next method\n   *\n   * @return {Promise<any>}\n   */\n  public static forceRepaint(): Promise<any> {\n    return new Promise((resolve) => {\n      window.requestAnimationFrame(() => {\n        setTimeout(resolve, 10);\n      });\n    });\n  }\n\n  /**\n   * Return a string of form 'Number px' from a number\n   *\n   * @param {number} num\n   * @return {string}\n   */\n  public static numberToPixels(num: number): string {\n    return `${Tools.isNumber(num) ? num : 0}px`;\n  }\n\n  /**\n   * Return an object containing only properties that change in regard of an original object and cast\n   * numbers\n   *\n   * @param sourceToDiff\n   * @param originalValue\n   * @return {any}\n   */\n  public static getDiff<T extends GenericObject, K extends keyof T>(\n    sourceToDiff: Partial<T>,\n    originalValue: T\n  ): Partial<T> {\n    // TODO change to loop rather than reduce to remove ts-ignore\n    // Moving to loop doesn't fix the problem\n    return Object.keys(sourceToDiff).reduce((result, key) => {\n      if (\n        (Tools.isDefined(originalValue[key]) &&\n          !Tools.isEqual(sourceToDiff[key], originalValue[key])) ||\n        (!Tools.isDefined(originalValue[key]) && Tools.isDefined(sourceToDiff[key]))\n      ) {\n        // @ts-ignore\n        result[key] = sourceToDiff[key];\n      }\n      return result;\n    }, {} as Partial<T>);\n  }\n\n  public static isNode(\n    item: Node<LkNodeData, LkEdgeData> | Edge<LkEdgeData, LkNodeData>\n  ): item is Node<LkNodeData, LkEdgeData> {\n    return item.isNode;\n  }\n\n  public static isEdge(\n    item: Node<LkNodeData, LkEdgeData> | Edge<LkEdgeData, LkNodeData>\n  ): item is Edge<LkEdgeData, LkNodeData> {\n    return !item.isNode;\n  }\n\n  public static isNodeList(\n    items: NodeList<LkNodeData, LkEdgeData> | EdgeList<LkEdgeData, LkNodeData>\n  ): items is NodeList<LkNodeData, LkEdgeData> {\n    return items.isNode;\n  }\n\n  /**\n   * Move an occurrence in an array\n   *\n   * @param {Array<T>} arr\n   * @param {number} oldIndex\n   * @param {number} newIndex\n   * @return {Array<T>}\n   */\n  public static moveInArray<T>(arr: Array<T>, oldIndex: number, newIndex: number): Array<T> {\n    const newArray = Tools.clone(arr);\n    let element;\n\n    if (\n      oldIndex !== newIndex &&\n      oldIndex >= 0 &&\n      oldIndex <= newArray.length &&\n      newIndex >= 0 &&\n      newIndex <= newArray.length\n    ) {\n      element = newArray[oldIndex];\n      if (oldIndex > newIndex) {\n        newArray.splice(oldIndex, 1);\n      } else {\n        newArray.splice(oldIndex, 1);\n        newIndex -= 1;\n      }\n      newArray[newIndex] = element;\n    }\n    return newArray;\n  }\n\n  private static safeSet<T extends GenericObject<unknown>>(\n    obj: T,\n    path: string[],\n    value: unknown\n  ): T | undefined {\n    if (!Tools.isDefined(obj)) {\n      return;\n    }\n    const c: T = <T>Tools.clone(obj);\n    let changed: any = c;\n    for (let i = 0; i < path.length - 1; ++i) {\n      if (changed[path[i]] === undefined) {\n        changed[path[i]] = {};\n      }\n      changed = changed[path[i]];\n    }\n    changed[path[path.length - 1]] = value;\n    return c;\n  }\n\n  /**\n   * Safely set in a value in nested object\n   *\n   * @param {T} obj\n   * @param {K1} key\n   * @return {(value: T[K1]) => T}\n   */\n  public static setIn<T extends object, K1 extends keyof T>(obj: T, key: K1): (value: T[K1]) => T;\n  public static setIn<T extends object, K1 extends keyof T, K2 extends keyof T[K1]>(\n    obj: T,\n    key1: K1,\n    key2: K2\n  ): (value: T[K1][K2]) => T;\n  public static setIn<\n    T extends object,\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2]\n  >(obj: T, key1: K1, key2: K2, key3: K3): (value: T[K1][K2][K3]) => T;\n  public static setIn<\n    T extends object,\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]\n  >(obj: T, key1: K1, key2: K2, key3: K3, key4: K4): (value: T[K1][K2][K3][K4]) => T;\n  public static setIn<\n    T extends object,\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]\n  >(obj: T, key1: K1, key2: K2, key3: K3, key4: K4, key5: K5): (value: T[K1][K2][K3][K4][K5]) => T;\n  public static setIn<\n    T extends object,\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]\n  >(\n    obj: T,\n    key1: K1,\n    key2: K2,\n    key3: K3,\n    key4: K4,\n    key5: K5,\n    key6: K6\n  ): (value: T[K1][K2][K3][K4][K5][K6]) => T;\n  public static setIn<\n    T extends object,\n    K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5],\n    K7 extends keyof T[K1][K2][K3][K4][K5][K6]\n  >(\n    obj: T,\n    key1: K1,\n    key2: K2,\n    key3: K3,\n    key4: K4,\n    key5: K5,\n    key6: K6,\n    key7: K7\n  ): (value: T[K1][K2][K3][K4][K5][K6][K7]) => T;\n  public static setIn(obj: any, ...keys: Array<string>): any {\n    return (value: any) => {\n      return Tools.safeSet(obj, keys, value);\n    };\n  }\n\n  /**\n   * Return the property type based on his values\n   *\n   * @param {Array<any>} values\n   * @return {'number' | 'string' }\n   */\n  public static getPropertyType(values: Array<any>): 'number' | 'string' {\n    let type: 'number' | 'string' = 'number';\n    if (\n      values.some((value) => {\n        return value.value !== '' && Tools.isDefined(value.value) && !Tools.isNumber(value.value);\n      })\n    ) {\n      type = 'string';\n    }\n    return type;\n  }\n\n  /**\n   * Return true if the date is on the requested format and if is a valid date\n   *\n   * @param {string} date\n   * @return {boolean}\n   */\n  public static isValidFilterDate(date: string): boolean {\n    const regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!Tools.isDefined(date)) {\n      return false;\n    }\n    if (!date.match(regEx)) {\n      return false;\n    }\n    return Tools.isDate(date);\n  }\n\n  /**\n   * Return the date as a string on the expected format\n   *\n   * @param {Date} date\n   * @param {boolean} isSeconds\n   */\n  public static getFilterFormattedDate(date: Date, isSeconds?: boolean): string | undefined {\n    if (isNaN(date.getFullYear())) {\n      return undefined;\n    }\n    if (isSeconds) {\n      date = new Date(date.getTime() * 1000);\n    }\n    return (\n      date.getFullYear() +\n      '-' +\n      ((date.getMonth() + 1).toString().length === 1\n        ? '0' + (date.getMonth() + 1)\n        : date.getMonth() + 1) +\n      '-' +\n      (date.getDate().toString().length === 1 ? '0' + date.getDate() : date.getDate())\n    );\n  }\n\n  /**\n   * Return the timestamp from a string date with a local timezone offset\n   */\n  public static getFilterFormattedTimestamp(\n    date: string,\n    hours: 'start' | 'end' | 'none',\n    inSeconds?: boolean\n  ): number | undefined {\n    let dateObject = new Date(date);\n\n    if (isNaN(dateObject.getFullYear())) {\n      return undefined;\n    }\n    if (hours === 'start') {\n      dateObject.setHours(0, 0, 0, 0);\n    } else if (hours === 'end') {\n      dateObject.setHours(23, 59, 59, 999);\n    }\n    // Convert milliseconds to seconds\n    if (inSeconds) {\n      dateObject = new Date(dateObject.getTime() / 1000);\n    }\n    // In milliseconds\n    return dateObject.getTime();\n  }\n\n  /**\n   * Return true if the input is a node or a edge list\n   *\n   * @param {NodeList | EdgeList | any} list\n   * @return {boolean}\n   */\n  public static isItemList(\n    list: NodeList<LkNodeData, LkEdgeData> | EdgeList<LkEdgeData, LkNodeData>\n  ): boolean {\n    return Tools.isDefined(list.getId);\n  }\n\n  /**\n   * Return true if the color tone is \"bright\"\n   *\n   * @param {string} color\n   * @returns {boolean}\n   */\n  public static isBright(color: Color): boolean {\n    if (color === null || !Tools.isStringFilled(color)) {\n      return true;\n    }\n    const hexRegExp = /#[A-Fa-f0-9]{3,6}/;\n    const rgbRegExp = /^rgb\\(\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*\\)$/i;\n    const rgbaRegExp = /^rgba\\(\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*(?:0|1|0?\\.\\d+)\\s*\\)$/i;\n    let rgb: string;\n\n    if (hexRegExp.test(color)) {\n      if (color.length < 5) {\n        color += color.slice(1);\n      }\n      color = color.replace('#', '');\n      const r = parseInt(color[0].toString() + color[1].toString(), 16);\n      const g = parseInt(color[2].toString() + color[3].toString(), 16);\n      const b = parseInt(color[4].toString() + color[5].toString(), 16);\n      rgb = `rgb(${r}, ${g}, ${b})`;\n    } else if (\n      rgbRegExp.test(color) ||\n      rgbaRegExp.test(color) ||\n      HTML_COLORS[color.toLowerCase()] !== undefined\n    ) {\n      rgb = Tools.isDefined(HTML_COLORS[color.toLowerCase()])\n        ? HTML_COLORS[color.toLowerCase()]['rgb']\n        : color;\n    } else {\n      return true;\n    }\n\n    const [r, g, b] = rgb\n      .replace(/\\s/g, '')\n      .match(/rgba?\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})(,\\d{1,3})?\\)/)!\n      .slice(1, 4);\n\n    if (!Tools.isDefined(r) || !Tools.isDefined(g) || !Tools.isDefined(b)) {\n      console.warn('The given color is not a valid rgb formatted color');\n      return true;\n    }\n    return (+r * 299 + +g * 587 + +b * 114) / 1000 > 255 * 0.7;\n  }\n\n  /**\n   * Return the same list with markers to highlight\n   *\n   * @param {Array<any>} list\n   * @param {string} query\n   * @returns {Array<any>}\n   */\n  public static highlightSearch(list: Array<any>, query: string): Array<any> {\n    if (!Tools.isDefined(list) || list.length === 0 || !Tools.isStringFilled(query)) {\n      return list;\n    }\n    list.map((item, i) => {\n      if (typeof item === 'string') {\n        if (item.toLowerCase().includes(query.toLowerCase())) {\n          const index = item.toLowerCase().indexOf(query.toLowerCase());\n          const spliced = item.slice(index, index + query.length);\n          list[i] = item.replace(spliced, '[match]' + spliced + '[/match]');\n        }\n      } else {\n        const keys = Object.keys(item);\n        keys.forEach((key) => {\n          if (item[key].toLowerCase().includes(query.toLowerCase())) {\n            const index = item[key].toLowerCase().indexOf(query.toLowerCase());\n            const spliced = item[key].slice(index, index + query.length);\n            item[key] = item[key].replace(spliced, '[match]' + spliced + '[/match]');\n          }\n        });\n        return item;\n      }\n    });\n    return list;\n  }\n\n  /**\n   * Return the entry list filtered by key and value using the entry query\n   *\n   * @param {Array<{ key: string, value: any }>} list\n   * @param {string} query\n   * @returns {Array<{ key: string, value: any }>}\n   */\n  public static getFilteredList(\n    list: Array<{key: string; value: any}>,\n    query: string\n  ): Array<{key: string; value: any}> {\n    if (!Tools.isDefined(list) || !Tools.isDefined(query) || list.length === 0) {\n      return [];\n    }\n    return list.filter(\n      (item) =>\n        Tools.valueExists(item.value) &&\n        (item.key.toString().toLowerCase().includes(query.toLowerCase()) ||\n          item.value.toString().toLowerCase().includes(query.toLowerCase()))\n    );\n  }\n\n  public static getFilteredProperties(\n    list: Array<{key: string; value: LkProperty}>,\n    query: string\n  ): Array<{key: string; value: LkProperty}> {\n    if (!Tools.isDefined(list) || !Tools.isDefined(query) || list.length === 0) {\n      return [];\n    }\n    return list.filter((item) => {\n      const value = this.getValueFromLkProperty(item.value);\n      return (\n        item.key.toString().toLowerCase().includes(query.toLowerCase()) ||\n        (Tools.isDefined(value) && `${value}`.toLowerCase().includes(query.toLowerCase()))\n      );\n    });\n  }\n\n  /**\n   * Get the amount of hidden neighbors from a list of nodes\n   *\n   * @param nodes\n   */\n  public static getHiddenNeighbors(nodes: NodeList<LkNodeData, LkEdgeData>): number {\n    return nodes.reduce((result: number, node: Node<LkNodeData, LkEdgeData>) => {\n      const statistics = node.getData('statistics');\n      if (statistics !== undefined) {\n        const hiddenNeighbors =\n          statistics.degree !== undefined && !statistics.supernode\n            ? statistics.degree - Tools.getDegreeWithoutSelfConnection(node)\n            : statistics.supernodeDegree;\n        if (hiddenNeighbors !== undefined && hiddenNeighbors > 0) {\n          return (result += hiddenNeighbors);\n        }\n      }\n      return result;\n    }, 0);\n  }\n\n  /**\n   * Return the visible degree of a node without self connection (self edge)\n   *\n   * @param {Node} node\n   * @return {number}\n   */\n  public static getDegreeWithoutSelfConnection(node: Node<LkNodeData, LkEdgeData>): number {\n    return node.getAdjacentNodes({policy: 'exclude-sources', filter: 'all'}).size;\n  }\n\n  /**\n   * Return an array sorted by strings that start with a specific string\n   *\n   * @param {Array<string>} array\n   * @param {string} startWith\n   * @returns {Array<string>}\n   */\n  public static sortByStartWith(array: Array<string>, startWith: string): Array<string> {\n    if (!Tools.isDefined(array)) {\n      return [];\n    }\n    if (!Tools.isDefined(startWith)) {\n      return array;\n    }\n    return array.sort((a, b) => {\n      //order by start with\n      if (b.toLowerCase().startsWith(startWith.toLowerCase())) {\n        return 1;\n      }\n      if (a.toLowerCase().startsWith(startWith.toLowerCase())) {\n        return -1;\n      }\n      //order alphabetically when both values don't start with\n      if (b.toLowerCase() > a.toLowerCase()) {\n        return -1;\n      }\n      if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Anonymize a string by hashing it\n   *\n   * @param s\n   */\n  public static hash(s: string): string {\n    let hash = 0;\n    if (s.length === 0) {\n      return `${hash}`;\n    }\n    for (let i = 0; i < this.length; i++) {\n      const char = s.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      // convert to 32bit integer\n      hash = hash & hash;\n    }\n    // convert to hex\n    return hash.toString(16);\n  }\n\n  /**\n   * Truncate a text\n   */\n  public static truncate(value: unknown, position: 'middle' | 'end', limit = 0): string {\n    const suffix = '\\u2026';\n    if (!Tools.isDefined(value)) {\n      return ``;\n    }\n    const valueToTruncate = `${value}`;\n    if (valueToTruncate.length <= limit + 1) {\n      return valueToTruncate;\n    }\n    const fixedLimit = limit - 1;\n    switch (position) {\n      case 'middle':\n        return (\n          valueToTruncate.substring(0, Math.ceil(fixedLimit / 2)) +\n          suffix +\n          valueToTruncate.substring(valueToTruncate.length - Math.floor(fixedLimit / 2))\n        );\n\n      case 'end':\n        return valueToTruncate.substring(0, fixedLimit) + suffix;\n    }\n  }\n\n  /**\n   * return the correct property value\n   */\n  public static getPropertyValue(\n    property: LkProperty,\n    invalidAsString?: boolean,\n    formattedDates?: boolean\n  ): undefined | null | string | number | boolean | Array<string> {\n    if (typeof property === 'object' && !Array.isArray(property)) {\n      if (!('status' in property)) {\n        if ((property.type === 'date' || property.type === 'datetime') && formattedDates) {\n          return Tools.formatDate(property.value, property.type === 'datetime');\n        } else if (property.type === 'date' || property.type === 'datetime') {\n          return new Date(property.value).getTime();\n        }\n      } else if (invalidAsString) {\n        return 'original' in property ? property.original : undefined;\n      } else {\n        return undefined;\n      }\n    }\n    return property;\n  }\n\n  public static getValueFromLkProperty(property: LkProperty): null | string | number | boolean {\n    if (typeof property === 'object' && 'type' in property) {\n      if (!('original' in property) && !('value' in property)) {\n        return null;\n      }\n      if ('original' in property) {\n        return `${property.original}`;\n      }\n      if ('value' in property) {\n        return Tools.formatDate(\n          new Date(\n            new Date(property.value).getTime() + Tools.timezoneToMilliseconds(property.timezone)\n          ).toISOString()\n        );\n      }\n    }\n    return property;\n  }\n}\n"]}