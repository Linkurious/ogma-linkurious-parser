{"version":3,"file":"NodeChecker.js","sourceRoot":"","sources":["../../src/QueryTemplateParser/NodeChecker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AASA,uDAAwE;AAExE,oDAAwC;AAExC,qDAAkD;AAElD,iCAAsE;AAEtE;IAAoC,+BAAkB;IACpD,qBAAY,KAAkB;eAC5B,kBAAM,KAAK,CAAC;IACd,CAAC;IAED,sBAAW,mCAAU;aAArB;YACE,OAAO;gBACL,IAAI,EAAE,+BAAiB,CAAC,IAAI;gBAC5B,SAAS,EAAE,YAAY;gBACvB,iBAAiB,EAAE,0BAAkB,CAAC,IAAI;aAC3C,CAAC;QACJ,CAAC;;;OAAA;IAED;;;;OAIG;IACO,+CAAyB,GAAnC,UAAoC,cAAyB;QAA7D,iBAmBC;QAlBC,OAAO;YACL,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE;gBACV,UAAU,EAAE;oBACV,KAAK,EAAE,UAAC,GAAW,EAAE,KAAc;wBACjC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;wBACjD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBAC/C,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;wBAC/D,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC/C,iFAAiF;4BACjF,KAAuB,UAAiB,EAAjB,KAAA,KAAiB,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gCAArC,IAAM,QAAQ,SAAA;gCACjB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;6BAClD;yBACF;oBACH,CAAC;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACO,6CAAuB,GAAjC,UAAkC,OAAiC;QAAnE,iBASC;QARC,OAAO;YACL,KAAK,EAAE,UAAC,GAAW,EAAE,KAAc;gBACjC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;gBACjD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;iBACpC;YACH,CAAC;SACF,CAAC;IACJ,CAAC;IAES,sCAAgB,GAA1B,UAA2B,OAAwC;QACjE,IAAM,OAAO,GAA4B,EAAE,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACtC,OAAO,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IACH,kBAAC;AAAD,CAAC,AA9DD,CAAoC,iCAAe,GA8DlD;AA9DY,kCAAW","sourcesContent":["/**\n * LINKURIOUS CONFIDENTIAL\n * Copyright Linkurious SAS 2012 - 2019\n *\n * - Created on 21-01-2019.\n */\n// external libs\n// local libs\nimport {FieldDefinition, Valcheck} from 'valcheck/lib/valcheck/Valcheck';\nimport {NodeTemplate, TemplateFieldType} from '@linkurious/rest-client';\n\nimport * as tools from '../tools/tools';\n\nimport {RawFieldChecker} from './RawFieldChecker';\n\nimport {InputSerialization, TemplateCheckerAttributes} from './index';\n\nexport class NodeChecker<E> extends RawFieldChecker<E> {\n  constructor(check: Valcheck<E>) {\n    super(check);\n  }\n\n  public get attributes(): TemplateCheckerAttributes {\n    return {\n      type: TemplateFieldType.NODE,\n      shorthand: 'categories',\n      defaultSerializer: InputSerialization.NODE\n    };\n  }\n\n  /**\n   * TemplateField json-options valcheck field definition.\n   *\n   * @param nodeCategories\n   */\n  protected getOptionsFieldDefinition(nodeCategories?: string[]): FieldDefinition<E> {\n    return {\n      required: false,\n      properties: {\n        categories: {\n          check: (key: string, value: unknown) => {\n            this.check.type(key, value, ['string', 'array']);\n            value = Array.isArray(value) ? value : [value];\n            this.check.stringArray(key, value, undefined, undefined, true);\n            if (nodeCategories && nodeCategories.length > 0) {\n              // validate categories to be in the schema if the list of categories is not empty\n              for (const category of value as string[]) {\n                this.check.values(key, category, nodeCategories);\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Template input value field definition.\n   *\n   * @param options\n   */\n  protected getInputFieldDefinition(options?: NodeTemplate['options']): FieldDefinition<E> {\n    return {\n      check: (key: string, value: unknown) => {\n        this.check.type(key, value, ['string', 'array']);\n        if (Array.isArray(value)) {\n          this.check.stringArray(key, value);\n        }\n      }\n    };\n  }\n\n  protected normalizeOptions(options: {categories: string | string[]}): NodeTemplate['options'] {\n    const changes: NodeTemplate['options'] = {};\n    if (!Array.isArray(options.categories)) {\n      changes.categories = [options.categories];\n    }\n    return tools.defaults(changes, options);\n  }\n}\n"]}