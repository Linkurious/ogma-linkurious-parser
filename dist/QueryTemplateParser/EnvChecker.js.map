{"version":3,"file":"EnvChecker.js","sourceRoot":"","sources":["../../src/QueryTemplateParser/EnvChecker.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;;;;;;;;;;;;;AAGH,uDAA0F;AAE1F,qDAAkD;AAElD,iCAAsE;AAEtE;IAAmC,8BAAkB;IAGnD,oBAAY,KAAkB;QAA9B,YACE,kBAAM,KAAK,CAAC,SACb;QAJO,oBAAc,GAAwB,MAAM,CAAC,MAAM,CAAC,+BAAiB,CAAC,CAAC;;IAI/E,CAAC;IAED,sBAAW,kCAAU;aAArB;YACE,OAAO;gBACL,IAAI,EAAE,+BAAiB,CAAC,GAAG;gBAC3B,SAAS,EAAE,OAAO;gBAClB,iBAAiB,EAAE,0BAAkB,CAAC,GAAG;aAC1C,CAAC;QACJ,CAAC;;;OAAA;IAED;;;;OAIG;IACO,8CAAyB,GAAnC;QACE,OAAO;YACL,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE;gBACV,KAAK,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAC;aACrD;SACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACO,4CAAuB,GAAjC,UAAkC,OAAgC;QAChE,OAAO,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC;IAC3B,CAAC;IACH,iBAAC;AAAD,CAAC,AArCD,CAAmC,iCAAe,GAqCjD;AArCY,gCAAU","sourcesContent":["/**\n * LINKURIOUS CONFIDENTIAL\n * Copyright Linkurious SAS 2012 - 2020\n *\n * - Created on 2020-08-18.\n */\n\nimport {FieldDefinition, Valcheck} from 'valcheck/lib/valcheck/Valcheck';\nimport {EnvTemplate, EnvTemplateValues, TemplateFieldType} from '@linkurious/rest-client';\n\nimport {RawFieldChecker} from './RawFieldChecker';\n\nimport {InputSerialization, TemplateCheckerAttributes} from './index';\n\nexport class EnvChecker<E> extends RawFieldChecker<E> {\n  private acceptedValues: EnvTemplateValues[] = Object.values(EnvTemplateValues);\n\n  constructor(check: Valcheck<E>) {\n    super(check);\n  }\n\n  public get attributes(): TemplateCheckerAttributes {\n    return {\n      type: TemplateFieldType.ENV,\n      shorthand: 'value',\n      defaultSerializer: InputSerialization.ENV\n    };\n  }\n\n  /**\n   * TemplateField json-options valcheck field definition.\n   *\n   * @param nodeCategories\n   */\n  protected getOptionsFieldDefinition(): FieldDefinition<E> {\n    return {\n      required: true,\n      properties: {\n        value: {required: true, values: this.acceptedValues}\n      }\n    };\n  }\n\n  /**\n   * Template input value field definition.\n   *\n   * @param options\n   */\n  protected getInputFieldDefinition(options?: EnvTemplate['options']): FieldDefinition<E> {\n    return {check: 'string'};\n  }\n}\n"]}