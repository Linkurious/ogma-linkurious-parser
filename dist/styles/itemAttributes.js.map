{"version":3,"file":"itemAttributes.js","sourceRoot":"","sources":["../../src/styles/itemAttributes.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * LINKURIOUS CONFIDENTIAL\n * Copyright Linkurious SAS 2012 - 2018\n *\n * Created by maximeallex on 2018-05-21.\n */\n'use strict';\n\nimport sha1 from 'sha1';\nimport {Color} from 'types/utilities';\n\nimport {Tools} from '..';\n\nimport {StyleRule} from './styleRule';\n\nexport const BASE_GREY = '#7f7f7f';\nexport const PALETTE = [\n  '#9467bd',\n  '#e377c2',\n  '#1f77b4',\n  '#17becf',\n  '#2ca02c',\n  '#bcbd22',\n  '#d62728',\n  '#ff7f0e',\n  '#8c564b',\n  '#c5b0d5',\n  '#f7b6d2',\n  '#aec7e8',\n  '#9edae5',\n  '#98df8a',\n  '#dbdb8d',\n  '#ff9896',\n  '#ffbb78',\n  '#c49c94'\n];\n\nexport class ItemAttributes {\n  protected colorsCache: Map<string, Color | Array<Color>> = new Map();\n  protected _rulesMap: {\n    color?: Array<StyleRule>;\n    icon?: Array<StyleRule>;\n    image?: Array<StyleRule>;\n    shape?: Array<StyleRule>;\n    size?: Array<StyleRule>;\n    width?: Array<StyleRule>;\n  } = {};\n\n  constructor(rulesMap: {\n    color?: Array<StyleRule>;\n    icon?: Array<StyleRule>;\n    image?: Array<StyleRule>;\n    shape?: Array<StyleRule>;\n    size?: Array<StyleRule>;\n    width?: Array<StyleRule>;\n  }) {\n    this.refresh(rulesMap);\n  }\n\n  /**\n   * Refresh the rules\n   */\n  public refresh(rulesMap: {\n    color?: Array<StyleRule>;\n    icon?: Array<StyleRule>;\n    image?: Array<StyleRule>;\n    shape?: Array<StyleRule>;\n    size?: Array<StyleRule>;\n    width?: Array<StyleRule>;\n  }): void {\n    if (rulesMap.color !== undefined) {\n      this.colorsCache = new Map();\n    }\n    this._rulesMap = {\n      color: rulesMap.color ? [...rulesMap.color].reverse() : this._rulesMap.color,\n      icon: rulesMap.icon ? [...rulesMap.icon].reverse() : this._rulesMap.icon,\n      image: rulesMap.image ? [...rulesMap.image].reverse() : this._rulesMap.image,\n      shape: rulesMap.shape ? [...rulesMap.shape].reverse() : this._rulesMap.shape,\n      size: rulesMap.size ? [...rulesMap.size].reverse() : this._rulesMap.size,\n      width: rulesMap.width ? [...rulesMap.width].reverse() : this._rulesMap.width\n    };\n  }\n\n  /**\n   * Return the color for a node when style color is auto\n   */\n  public static autoColor(value: string, ignoreCase?: boolean): string {\n    if (!Tools.isDefined(value)) {\n      return BASE_GREY;\n    }\n    return PALETTE[ItemAttributes.sha1Modulo(value, PALETTE.length, ignoreCase)];\n  }\n\n  /**\n   * Return a number from 0 to number of occurrence in a palette based on a property\n   */\n  private static sha1Modulo(\n    input: string,\n    modulo: number,\n    ignoreCase: boolean | undefined\n  ): number {\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    return +('0x' + sha1(input).substr(-4)) % modulo;\n  }\n\n  /**\n   * Get color of a type\n   */\n  public static getTypeColor(rule: StyleRule, type: string): string | null {\n    if (typeof rule.style.color === 'object' && rule.style.color.input[0] !== 'properties') {\n      return ItemAttributes.autoColor(type, rule.style.color.ignoreCase);\n    }\n    if (!Tools.isDefined(rule.input) && typeof rule.style.color !== 'object') {\n      return rule.style.color;\n    }\n    return null;\n  }\n}\n"]}